 ------
 thindeck.com, Hosting That Deploys Itself
 ------
 Carlos Miranda
 ------
 2014-04-01
 ------

~~ Copyright (c) 2014, thindeck.com
~~ All rights reserved.
~~
~~ Redistribution and use in source and binary forms, with or without
~~ modification, are NOT permitted.
~~
~~ THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
~~ "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT
~~ NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
~~ FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
~~ THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
~~ INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
~~ (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
~~ SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
~~ HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
~~ STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
~~ ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
~~ OF THE POSSIBILITY OF SUCH DAMAGE.

thindeck.com Architecture

1. Introduction

  This document specifies architecture and design decisions made in relation to
  the Thindeck.com project.

  Section 2 lists basic assumptions made after investigation of the provided
  business case description. Section 3 includes two class diagrams showing the
  packaging and class design. Section 4 explains separation of software
  components, and the interaction between them and third-parties.
  Section 5 describes a proposed physical layout of the major tiers of the
  system under development (SuD). Section 6 gives internal details of major use
  case implementations. Section 7 lists the three most severe technical risks
  identified, analyzed, and planned. Section 8 lists all important technical
  decisions made during architecture and design.

2. Assumptions

~~ @todo #1 The specification is still rather vague for now. I haven't written
~~  any assumptions here just yet. Let's write them down here as they come up.

3. Class diagrams

  Class Diagram CLS1 describes the data model of the SuD in terms of classes,
  attributes, methods, and associations between them.

  [texry/classdiag-1.png]

~~ @todo #1 Let's define the packaging structure of Thindeck. Describe the
~~  purposes of each package, the classes and resources that they contain, etc.
~~  Create a diagram showing how they are all related.

4. Component View

~~ @todo #1 So far we don't know what components we're going to use. Let's find
~~  out, and document those decisions here. Think about what we're going to need
~~  here - APIs for services that we're going to use, code libraries,
~~  web framework, etc.

5. Deployment View

~~ @todo #1 We don't know what the system looks like when it's been deployed.
~~  Let's document that here. Stuff that we might need to think about:
~~  1) Web hosting, 2) Code repository (Github, most likely), 3) Data hosting

6. Use Cases, Sequence Diagrams

UC1: "User Hosts Repo"

  Use case diagram UC1 describes, at the highest level, the functions that are
  available to a user who wants to host a repo.

  [texry/usecasediag-uc1.png]

7. Technical Risks

~~ @todo #1 We need to identify the risks associated with this project. Let's
~~  document those risks in this section.

8. Decisions Made

~~ @todo #1 Let's document the architectural and design decisions in this
~~  section.

9. References

  UML 2.0, Infrastructure and Superstructure, by OMG,
  {{http://www.omg.org/spec/UML/2.0/}}.