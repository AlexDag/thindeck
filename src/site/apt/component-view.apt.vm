 ------
 Component View
 ------
 Yegor Bugayenko
 ------
 2014-06-24
 ------

~~ Copyright (c) 2014, thindeck.com
~~ All rights reserved.
~~
~~ Redistribution and use in source and binary forms, with or without
~~ modification, are NOT permitted.
~~
~~ THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
~~ "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT
~~ NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
~~ FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
~~ THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
~~ INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
~~ (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
~~ SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
~~ HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
~~ STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
~~ ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
~~ OF THE POSSIBILITY OF SUCH DAMAGE.

Component View

  In order to achieve high scalability and at the same
  time stability of the system, we decentralize its functionality
  among a number of independent components. In order to make
  the system even more scalable and cloud-ready we make components
  stateless and connect them <<asychronously>>.

  Asynchronous connection between components means that none
  of them assume online availability of the other. They simply never connect
  to each other. They all communicate through stateful resources available
  in cloud, like, for example, Amazon Web Services.

  The diagram shows all highest level components and their
  interfaces:

[plantuml/component-view-overview.svg]

  Meter
