<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href='requs.xsl' type='text/xsl'?><spec msec="19316" time="2014-06-07T05:12:06">
   <input>Hoster is "an owner of a web server, who wants to
install Thindeck locally and host containers himself".

System is "System under Development (thindeck itself)".

:UC8 is specified.
:UC8 is a should.
UC8 where Hoster(a hoster) creates standalone thindeck installation:
    1. The hoster "downloads the Thindeck app (either as a TGZ archive of RPM package or as a Chef cookbook)";
    2. The hoster "installs the app locally on his machine";
    3. The hoster "starts the system as a Java standalone app, or a Linux service, or something similar";
    4. The hoster creates System(a system);
    5. The system "is now running as a standalone app on hoster's machine. It uses its local database and local Docker installation. That means that no object in the system will depend on any other Thindeck installation, including our own which we provide as a service. This applies to user profiles, repositories, Docker containers, etc.".
UC8/PRICING must "Standalone Thindeck installation is completely free.
    Thindeck, as a software product, is open source. Anyone should be
    able to download and install it locally, on his own server(s)".

System is "a web hosting that deploys itself".

MeanTimeBetweenFailures is "time that System spends in continuous up time between one failure and the next failure.
MTBF is a measure of System reliability via continuous operation and therefore the MTBF target should be set at the highest achievable number. Users will not be notified of failures or down time".

MeanTimeToRecovery is "time that System spends in unscheduled down time until recovery as a result of failure.
MTTR is a measure of System reliability via service recovery and therefore the MTTR target should be set at the lowest achievable number".

:UC1 is specified.
:UC1 is a must.
UC1 where User (a user) hosts Repository (a repo):
    1. The user registers the repo;
    2. The user reads deployment logs of the repo;
    3. The user reads usage stats of the repo;
    4. The user compensates usage of the repo;
    5. The user terminates the repo.
UC1/UX must "be in English only".
UC1/WEBDESIGN must "be 'responsive', see http://en.wikipedia.org/wiki/Responsive_web_design . Since all thindeck site pages will look good on every device, we won't need a separate mobile version of the site".
UC1/STATELESS must "all user repositories must be 100% stateless. We should inform users that we will be constantly changing the number of running containers. We may terminate any container at any moment. This means that the software inside the container (repository) should NOT keep any data persistent. They should use other services for persistence, like Amazon DynamoDB, etc".

User is "a person who uses or wants to use hosting and is identified by the system (logged in)".

User includes:
    repo-s? as Repository,
    URN as "a unique identifier of itself, for example urn:github:526301",
    authTokens as "a list of auth tokens to each auth provider the user connected to, e.g., Google, Facebook, etc.",
    balance as "amount of money available, can be stored as integer number of cents".

Anonymous is "a person who is not identified in the system (not logged in). He can actually have a User account in our System, but we can't tell it until he logs in".

FrontPage is "a front page of Thindeck for Anonymous which contains all the information about pricing, 'how it works', etc.".

:UC9.1 is specified.
:UC9.1 is a should.
UC9.1 where Anonymous (a anonymous) explores thindeck:
    1. The anonymous reads FrontPage(a frontPage);
    2. The anonymous "reads the stats page containing our runtime stats, similar to https://status.github.com/";
    3. The anonymous "reads our terms page including all the legal wordings".

:UC9.2 is specified.
:UC9.2 is a must.
UC9.2 where Anonymous (a anonymous) signs up:
    1. The anonymous "initiates sign in via one of OAuth providers from this list: Google Plus, Facebook, Github, or Twitter.";
    2. The system "requests permission from the OAuth provider chosen by the anonymous";
    3. The system creates User(a user);
    4. The system "adds $5 to the user.balance";
    5. The anonymous logs in.
UC9.2/2 when "a user is already signed up":
    1. The anonymous logs in.
UC9.2/2 when "an OAuth provider denied access":
    1. Fail since "Not authorized by chosen OAuth provider".

:UC9.3 is specified.
:UC9.3 is a must.
UC9.3 where Anonymous (a anonymous) logs in using User(a user):
    1. The system "from now on treats the anonymous as a User".

:UC11 is specified.
:UC11 is a must.
UC11 where User (a user) logs out:
    1. The system "from now on treats the user as anonymous and displays a public page".

Repository is "a local copy of files and folders being pulled every 5 minutes from some remote source".
Repository needs:
    name as "a unique name of the repo in user's account",
    deployment-? as Deployment,
    dockerFile as "Docker file",
    manifest as Manifest.

GitRepository is Repository.
GitRepository is "connected to a remote git (github) repository".
GitRepository includes:
    uri as "a non-ambiguous descriptor of a repo, for example ssh://git@github:yegor256/thindeck.git",
    key-? as "a private SSH key, see http://en.wikipedia.org/wiki/Public-key_cryptography".

SvnRepository is Repository.
SvnRepository is "connected to a remote subversion repository".
SvnRepository includes:
    uri as "a non-ambiguous descriptor of a repo, for example ssh://git@github:yegor256/thindeck.git",
    userName-? as "credentials used to read files from the repository",
    password-? as "credentials used to read files from the repository".

FtpRepository is Repository.
FtpRepository is "connected to a remote FTP server".
FtpRepository includes:
    uri as "a URL containing credentials valid to connect to FTP server, for example ftp://user:password@ftpserver/url-path".

DropboxRepository is Repository.
DropboxRepository is "connected to a shared Dropbox folder".
DropboxRepository includes: apiKey as "Dropbox specific connection information".

AmazonSthreeRepository is Repository.
AmazonSthreeRepository is "connected to an Amazon S3 file storage".
AmazonSthreeRepository includes: apiKey as "Amazon S3 specific connection information".

GoogleDriveRepository is Repository.
GoogleDriveRepository is "connected to a Google Drive storage".
GoogleDriveRepository includes: apiKey as "Google Drive specific connection information".

Deployment is "a summary statistics of Containers related to a Repository, with their statuses and text logs".

Deployment includes:
    container-s as Container,
    state as "one from the list: building, running",
    hourlyUsage-s? as HourlyUsage.

Application is "a running instance of user's code built from his Repository".

Container is "a virtual operating system running user's application build from Repository".
Container includes: app as Application.

HourlyUsage is "an atomic track record of the usage of resources".
HourlyUsage includes:
    container as Container,
    hours as "a calendar hour, for example: 2014-05-02T18",
    cpuSeconds as "how many seconds our CPU spent working with the container during this hour.
    Can easily be over 3600, since we may have multiple CPU's working with the container",
    bytesIn as "an integer number of bytes came in the container",
    bytesOut as "an integer number of bytes came out of the container".

Manifest is "a YAML configuration file, stored in the repository, and
    includes a) list of domain names, b) list of open ports.".

UC1/1 when "repo already exists":
    1. Fail since "a message that the repository exists already in his account".

:UC2 is specified.
:UC2 is a must.
UC2 where User registers Repository:
    1. The user "enters a new unique name of the repository, provides the data required for authorization,
    depending on the type of chosen repository, and confirms entered data";
    2. The system creates Repository(a repo);
    3. The system "displays a repo in the list of other repositories in the user account";
    4. The system deploys the repo;
    5. The system reads the repo "periodically (every 5 minutes) pulling the changes from repository remote source";
    6. The system redeploys the repo "If the system detected changes after last pull".
UC2/1 when "data is incorrect":
    1. Fail since "repository cannot be registered".

:UC2.1 is specified.
:UC2.1 is a must.
UC2.1 where System(a system) redeploys using Repository(a repo):
    1. The system deletes Container(a containers) "terminates all Docker containers of the repo";
    2. The system deploys the repo "using updated sources".

:UC3 is specified.
:UC3 is a must.
UC3 where System(a system) deploys using Repository (a repo):
    1. The system "starts a new Docker container with the latest version of the source code, configuring it as defined in Dockerfile";
    2. The system "applies the configuration defined in Manifest file to the container after it is started";
    3. The system "tracks the usage of CPU time and traffic by the container".
UC3/PERF must "each thindeck server should be able to host 4 actively working
    containers inside it, altogether handling 3M hits and 200 Gb of traffic
    per month, or 100K and 6.6 Gb per day".

:UC4 is specified.
:UC4 is a must.
UC4 where User reads deployment logs using Repository(a repo):
    1. The system lists Deployment(a deployments) "all deployments of the repo";
    2. The system "displays a list of deployments that has already been executed";
    3. The user "chooses a deployment and initiates viewing its log";
    4. The system "displays a log for the chosen deployment".

:UC5 is specified.
:UC5 is a must.
UC5 where User(a user) reads usage stats using Repository(a repo):
    1. The user "selects a time interval, like: last 7 days, last month, custom (from date, to date)";
    2. The system "reads HourlyUsage records corresponding to the repo within specified time interval";
    3. The system "shows the user a table with these columns: Container (id), Inbound traffic (Gb),
    Outbound traffic (Gb), CPU time (min), Cost ($). Each table row corresponds to a container.
    Last row contains totals by all containers. The values in the table are usage stats by container
    within specified time interval".

:UC6 is specified.
:UC6 is a must.
UC6 where User compensates usage of Repository:
    "The user adds funds to his account, when it goes to a negative value.
    Funds can be added through PayPal only".

:UC7 is specified.
:UC7 is a must.
UC7 where User terminates Repository:
    "The user just removes the repository and we immediately terminate
    the Docker container, close all ports, and stop routing domain names.
    This operation is irreversible".

HttpRequest is "a request that client application (web browser, web service consumer, etc.) sends to a web server via http protocol".

HttpResponse is "a response that a web server sends back after it receives HttpRequest".

WebVisitor is "something sending http request to user's Application deployed in Thindeck".

:UC10.1 is specified.
:UC10.1 is a must.
UC10.1 where WebVisitor(a visitor) utilizes Application(an app):
    1. The visitor creates HttpRequest(a request) "and sends it to the system";
    2. The system reads the request "to find out to which Thindeck user this request is related to";
    3. The system reads User(a user) "to check user.balance";
    4. The system notifies low balance to the user "if user.balance is below 5$";
    5. The system reads Deployment(a deployment) "to choose its container which will handle the request";
    6. The system reads Container(a container) "the container to handle the request. If all containers are overloaded, then another one is started to handle the request";
    7. The system "redirects the request to the app instance in a chosen container";
    8. The app reads the request "instance of app running in a chosen container";
    9. The app "processes the request";
    10. The app creates HttpResponse(a response);
    11. The app "replies to the visitor with the response";
    12. The visitor reads the response;
    13. The system "tracks resources usage by the app";
    14. The system creates HourlyUsage(a record) "and tracks utilized CPU time and traffic in this record. If a corresponding record already exists, then this record is updated instead of creating a new one".
UC10.1/2 when "the request is not valid, i.e., there is no active deployment whose Manifest would contain the binding to the requested host:port":
    1. Fail since "http error 404: none of deployed applications is binded to the requested host:port".
UC10.1/3 when "user.balance is below or equals to zero":
    1. The system notifies zero balance to the user;
    2. Fail since "error page pointing out that user must top up his balance to utilize his application. The page should also contain a link to another page where the user can pay. If the user is Anonymous, he must log in first".
UC10.1/7 when "app is not listening to http port":
    1. Fail since "http error 404: the app is not listening to the host:port".
UC10.1/9 when "an exception appears during the app execution":
    1. Fail since "http error 404 OR some standard page with exception stack trace".

UC6.2 where System(a system) notifies low balance to User(a user):
    "The system sends the user an email notification one time when his balance is dropped below $5. We can also implement UI notifications".

UC6.3 where System(a system) notifies zero balance to User(a user):
    "The system sends the user an email notification one time when his balance is dropped below $0. We can also implement UI notifications".

Vision: """

Requirements providers are:

 * Yegor Bugayenko

Key success factors are:

 * High availability - much higher than anyone else can offer.
 * Low cost - lower than anyone.
 * Easy (re)deployment - a unique 'pull' deployment mechanism.
 * Simple control panel - one form and your site is ready in 5 minutes.".

""".

</input>
   <types>
      <type>
         <name>Hoster</name>
         <mentioned>
            <where>1</where>
            <where>8</where>
         </mentioned>
         <info>
            <informal>an owner of a web server, who wants to
install Thindeck locally and host containers himself</informal>
         </info>
      </type>
      <type>
         <name>System</name>
         <mentioned>
            <where>4</where>
            <where>18</where>
            <where>159</where>
            <where>165</where>
            <where>237</where>
            <where>240</where>
         </mentioned>
         <info>
            <informal>System under Development (thindeck itself)</informal>
            <informal>a web hosting that deploys itself</informal>
         </info>
      </type>
      <type>
         <name>MeanTimeBetweenFailures</name>
         <mentioned>
            <where>20</where>
         </mentioned>
         <info>
            <informal>time that System spends in continuous up time between one failure and the next failure.
MTBF is a measure of System reliability via continuous operation and therefore the MTBF target should be set at the highest achievable number. Users will not be notified of failures or down time</informal>
         </info>
      </type>
      <type>
         <name>MeanTimeToRecovery</name>
         <mentioned>
            <where>23</where>
         </mentioned>
         <info>
            <informal>time that System spends in unscheduled down time until recovery as a result of failure.
MTTR is a measure of System reliability via service recovery and therefore the MTTR target should be set at the lowest achievable number</informal>
         </info>
      </type>
      <type>
         <name>User</name>
         <mentioned>
            <where>28</where>
            <where>38</where>
            <where>40</where>
            <where>77</where>
            <where>146</where>
            <where>175</where>
            <where>183</where>
            <where>193</where>
            <where>199</where>
         </mentioned>
         <info>
            <informal>a person who uses or wants to use hosting and is identified by the system (logged in)</informal>
         </info>
         <slots>
            <slot>
               <name>repo</name>
               <mentioned>
                  <where>41</where>
               </mentioned>
               <arity>ANY</arity>
               <type>Repository</type>
            </slot>
            <slot>
               <name>URN</name>
               <mentioned>
                  <where>42</where>
               </mentioned>
               <info>
                  <informal>a unique identifier of itself, for example urn:github:526301</informal>
               </info>
            </slot>
            <slot>
               <name>authTokens</name>
               <mentioned>
                  <where>43</where>
               </mentioned>
               <info>
                  <informal>a list of auth tokens to each auth provider the user connected to, e.g., Google, Facebook, etc.</informal>
               </info>
            </slot>
            <slot>
               <name>balance</name>
               <mentioned>
                  <where>44</where>
               </mentioned>
               <info>
                  <informal>amount of money available, can be stored as integer number of cents</informal>
               </info>
            </slot>
         </slots>
      </type>
      <type>
         <name>Anonymous</name>
         <mentioned>
            <where>46</where>
            <where>52</where>
            <where>59</where>
            <where>72</where>
         </mentioned>
         <info>
            <informal>a person who is not identified in the system (not logged in). He can actually have a User account in our System, but we can't tell it until he logs in</informal>
         </info>
      </type>
      <type>
         <name>FrontPage</name>
         <mentioned>
            <where>48</where>
         </mentioned>
         <info>
            <informal>a front page of Thindeck for Anonymous which contains all the information about pricing, 'how it works', etc.</informal>
         </info>
      </type>
      <type>
         <name>Repository</name>
         <mentioned>
            <where>80</where>
            <where>81</where>
         </mentioned>
         <info>
            <informal>a local copy of files and folders being pulled every 5 minutes from some remote source</informal>
         </info>
         <slots>
            <slot>
               <name>name</name>
               <mentioned>
                  <where>82</where>
               </mentioned>
               <info>
                  <informal>a unique name of the repo in user's account</informal>
               </info>
            </slot>
            <slot>
               <name>deployment</name>
               <mentioned>
                  <where>83</where>
               </mentioned>
               <arity>OPT</arity>
               <type>Deployment</type>
            </slot>
            <slot>
               <name>dockerFile</name>
               <mentioned>
                  <where>84</where>
               </mentioned>
               <info>
                  <informal>Docker file</informal>
               </info>
            </slot>
            <slot>
               <name>manifest</name>
               <mentioned>
                  <where>85</where>
               </mentioned>
               <type>Manifest</type>
            </slot>
         </slots>
      </type>
      <type>
         <name>GitRepository</name>
         <mentioned>
            <where>87</where>
            <where>88</where>
            <where>89</where>
         </mentioned>
         <parents>
            <type>Repository</type>
         </parents>
         <info>
            <informal>connected to a remote git (github) repository</informal>
         </info>
         <slots>
            <slot>
               <name>uri</name>
               <mentioned>
                  <where>90</where>
               </mentioned>
               <info>
                  <informal>a non-ambiguous descriptor of a repo, for example ssh://git@github:yegor256/thindeck.git</informal>
               </info>
            </slot>
            <slot>
               <name>key</name>
               <mentioned>
                  <where>91</where>
               </mentioned>
               <arity>OPT</arity>
               <info>
                  <informal>a private SSH key, see http://en.wikipedia.org/wiki/Public-key_cryptography</informal>
               </info>
            </slot>
         </slots>
      </type>
      <type>
         <name>SvnRepository</name>
         <mentioned>
            <where>93</where>
            <where>94</where>
            <where>95</where>
         </mentioned>
         <parents>
            <type>Repository</type>
         </parents>
         <info>
            <informal>connected to a remote subversion repository</informal>
         </info>
         <slots>
            <slot>
               <name>uri</name>
               <mentioned>
                  <where>96</where>
               </mentioned>
               <info>
                  <informal>a non-ambiguous descriptor of a repo, for example ssh://git@github:yegor256/thindeck.git</informal>
               </info>
            </slot>
            <slot>
               <name>userName</name>
               <mentioned>
                  <where>97</where>
               </mentioned>
               <arity>OPT</arity>
               <info>
                  <informal>credentials used to read files from the repository</informal>
               </info>
            </slot>
            <slot>
               <name>password</name>
               <mentioned>
                  <where>98</where>
               </mentioned>
               <arity>OPT</arity>
               <info>
                  <informal>credentials used to read files from the repository</informal>
               </info>
            </slot>
         </slots>
      </type>
      <type>
         <name>FtpRepository</name>
         <mentioned>
            <where>100</where>
            <where>101</where>
            <where>102</where>
         </mentioned>
         <parents>
            <type>Repository</type>
         </parents>
         <info>
            <informal>connected to a remote FTP server</informal>
         </info>
         <slots>
            <slot>
               <name>uri</name>
               <mentioned>
                  <where>103</where>
               </mentioned>
               <info>
                  <informal>a URL containing credentials valid to connect to FTP server, for example ftp://user:password@ftpserver/url-path</informal>
               </info>
            </slot>
         </slots>
      </type>
      <type>
         <name>DropboxRepository</name>
         <mentioned>
            <where>105</where>
            <where>106</where>
            <where>107</where>
         </mentioned>
         <parents>
            <type>Repository</type>
         </parents>
         <info>
            <informal>connected to a shared Dropbox folder</informal>
         </info>
         <slots>
            <slot>
               <name>apiKey</name>
               <mentioned>
                  <where>107</where>
               </mentioned>
               <info>
                  <informal>Dropbox specific connection information</informal>
               </info>
            </slot>
         </slots>
      </type>
      <type>
         <name>AmazonSthreeRepository</name>
         <mentioned>
            <where>109</where>
            <where>110</where>
            <where>111</where>
         </mentioned>
         <parents>
            <type>Repository</type>
         </parents>
         <info>
            <informal>connected to an Amazon S3 file storage</informal>
         </info>
         <slots>
            <slot>
               <name>apiKey</name>
               <mentioned>
                  <where>111</where>
               </mentioned>
               <info>
                  <informal>Amazon S3 specific connection information</informal>
               </info>
            </slot>
         </slots>
      </type>
      <type>
         <name>GoogleDriveRepository</name>
         <mentioned>
            <where>113</where>
            <where>114</where>
            <where>115</where>
         </mentioned>
         <parents>
            <type>Repository</type>
         </parents>
         <info>
            <informal>connected to a Google Drive storage</informal>
         </info>
         <slots>
            <slot>
               <name>apiKey</name>
               <mentioned>
                  <where>115</where>
               </mentioned>
               <info>
                  <informal>Google Drive specific connection information</informal>
               </info>
            </slot>
         </slots>
      </type>
      <type>
         <name>Deployment</name>
         <mentioned>
            <where>117</where>
            <where>119</where>
         </mentioned>
         <info>
            <informal>a summary statistics of Containers related to a Repository, with their statuses and text logs</informal>
         </info>
         <slots>
            <slot>
               <name>container</name>
               <mentioned>
                  <where>120</where>
               </mentioned>
               <arity>MANY</arity>
               <type>Container</type>
            </slot>
            <slot>
               <name>state</name>
               <mentioned>
                  <where>121</where>
               </mentioned>
               <info>
                  <informal>one from the list: building, running</informal>
               </info>
            </slot>
            <slot>
               <name>hourlyUsage</name>
               <mentioned>
                  <where>122</where>
               </mentioned>
               <arity>ANY</arity>
               <type>HourlyUsage</type>
            </slot>
         </slots>
      </type>
      <type>
         <name>Application</name>
         <mentioned>
            <where>124</where>
         </mentioned>
         <info>
            <informal>a running instance of user's code built from his Repository</informal>
         </info>
      </type>
      <type>
         <name>Container</name>
         <mentioned>
            <where>126</where>
            <where>127</where>
         </mentioned>
         <info>
            <informal>a virtual operating system running user's application build from Repository</informal>
         </info>
         <slots>
            <slot>
               <name>app</name>
               <mentioned>
                  <where>127</where>
               </mentioned>
               <type>Application</type>
            </slot>
         </slots>
      </type>
      <type>
         <name>HourlyUsage</name>
         <mentioned>
            <where>129</where>
            <where>130</where>
         </mentioned>
         <info>
            <informal>an atomic track record of the usage of resources</informal>
         </info>
         <slots>
            <slot>
               <name>container</name>
               <mentioned>
                  <where>131</where>
               </mentioned>
               <type>Container</type>
            </slot>
            <slot>
               <name>hours</name>
               <mentioned>
                  <where>132</where>
               </mentioned>
               <info>
                  <informal>a calendar hour, for example: 2014-05-02T18</informal>
               </info>
            </slot>
            <slot>
               <name>cpuSeconds</name>
               <mentioned>
                  <where>133</where>
               </mentioned>
               <info>
                  <informal>how many seconds our CPU spent working with the container during this hour.
    Can easily be over 3600, since we may have multiple CPU's working with the container</informal>
               </info>
            </slot>
            <slot>
               <name>bytesIn</name>
               <mentioned>
                  <where>135</where>
               </mentioned>
               <info>
                  <informal>an integer number of bytes came in the container</informal>
               </info>
            </slot>
            <slot>
               <name>bytesOut</name>
               <mentioned>
                  <where>136</where>
               </mentioned>
               <info>
                  <informal>an integer number of bytes came out of the container</informal>
               </info>
            </slot>
         </slots>
      </type>
      <type>
         <name>Manifest</name>
         <mentioned>
            <where>138</where>
         </mentioned>
         <info>
            <informal>a YAML configuration file, stored in the repository, and
    includes a) list of domain names, b) list of open ports.</informal>
         </info>
      </type>
      <type>
         <name>HttpRequest</name>
         <mentioned>
            <where>204</where>
         </mentioned>
         <info>
            <informal>a request that client application (web browser, web service consumer, etc.) sends to a web server via http protocol</informal>
         </info>
      </type>
      <type>
         <name>HttpResponse</name>
         <mentioned>
            <where>206</where>
         </mentioned>
         <info>
            <informal>a response that a web server sends back after it receives HttpRequest</informal>
         </info>
      </type>
      <type>
         <name>WebVisitor</name>
         <mentioned>
            <where>208</where>
            <where>212</where>
         </mentioned>
         <info>
            <informal>something sending http request to user's Application deployed in Thindeck</informal>
         </info>
      </type>
   </types>
   <methods>
      <method seal="eb8562">
         <id>UC8</id>
         <attributes>
            <attribute seal="">specified</attribute>
            <attribute seal="">should</attribute>
         </attributes>
         <mentioned>
            <where>6</where>
            <where>7</where>
            <where>8</where>
            <where>16</where>
         </mentioned>
         <bindings>
            <binding>
               <name>_self</name>
               <type>Hoster</type>
            </binding>
            <binding>
               <name>hoster</name>
               <type>Hoster</type>
            </binding>
            <binding>
               <name>system</name>
               <type>System</type>
            </binding>
         </bindings>
         <object>hoster</object>
         <signature>creates standalone thindeck installation</signature>
         <steps>
            <step>
               <number>1</number>
               <mentioned>
                  <where>9</where>
               </mentioned>
               <object>hoster</object>
               <signature>"downloads the Thindeck app (either as a TGZ archive of RPM package or as a Chef cookbook)"</signature>
            </step>
            <step>
               <number>2</number>
               <mentioned>
                  <where>10</where>
               </mentioned>
               <object>hoster</object>
               <signature>"installs the app locally on his machine"</signature>
            </step>
            <step>
               <number>3</number>
               <mentioned>
                  <where>11</where>
               </mentioned>
               <object>hoster</object>
               <signature>"starts the system as a Java standalone app, or a Linux service, or something similar"</signature>
            </step>
            <step>
               <number>4</number>
               <mentioned>
                  <where>12</where>
               </mentioned>
               <object>hoster</object>
               <signature>creates</signature>
               <result>system</result>
            </step>
            <step>
               <number>5</number>
               <mentioned>
                  <where>13</where>
               </mentioned>
               <object>system</object>
               <signature>"is now running as a standalone app on hoster's machine. It uses its local database and local Docker installation. That means that no object in the system will depend on any other Thindeck installation, including our own which we provide as a service. This applies to user profiles, repositories, Docker containers, etc."</signature>
            </step>
         </steps>
         <nfrs>
            <nfr>
               <id>PRICING</id>
               <info>
                  <informal>Standalone Thindeck installation is completely free.
    Thindeck, as a software product, is open source. Anyone should be
    able to download and install it locally, on his own server(s)</informal>
               </info>
            </nfr>
         </nfrs>
         <markdown>The following table describes all technical details of Use Case `UC8`:

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Property&lt;/th&gt;
            &lt;th&gt;Details&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;ID&lt;/td&gt;
            &lt;td&gt;UC8&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Signature&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;hoster&lt;/code&gt; creates standalone thindeck installation&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Primary&lt;/td&gt;
            &lt;td&gt;Hoster&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Actors&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;hoster&lt;/code&gt; as Hoster; &lt;code&gt;system&lt;/code&gt; as System&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Success Flow&lt;/td&gt;
            &lt;td&gt;1. &lt;code&gt;hoster&lt;/code&gt; "downloads the Thindeck app (either as a TGZ archive of RPM package or as a Chef cookbook)"&lt;br/&gt;2. &lt;code&gt;hoster&lt;/code&gt; "installs the app locally on his machine"&lt;br/&gt;3. &lt;code&gt;hoster&lt;/code&gt; "starts the system as a Java standalone app, or a Linux service, or something similar"&lt;br/&gt;4. &lt;code&gt;hoster&lt;/code&gt; creates &lt;code&gt;system&lt;/code&gt;
               &lt;br/&gt;5. &lt;code&gt;system&lt;/code&gt; "is now running as a standalone app on hoster's machine. It uses its local database and local Docker installation. That means that no object in the system will depend on any other Thindeck installation, including our own which we provide as a service. This applies to user profiles, repositories, Docker containers, etc."&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;NFRs&lt;/td&gt;
            &lt;td&gt;PRICING must  "Standalone Thindeck installation is completely free. Thindeck, as a software product, is open source. Anyone should be able to download and install it locally, on his own server(s)"&lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;

Actors taking participation in the Use Case have the following properties:

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Actor&lt;/th&gt;
            &lt;th&gt;Properties&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;Hoster&lt;/td&gt;
            &lt;td&gt;"an owner of a web server, who wants to install Thindeck locally and host containers himself"&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Hoster&lt;/td&gt;
            &lt;td&gt;"an owner of a web server, who wants to install Thindeck locally and host containers himself"&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;System&lt;/td&gt;
            &lt;td&gt;"System under Development (thindeck itself)"&lt;br/&gt;"a web hosting that deploys itself"&lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;
</markdown>
         <html>&lt;p&gt;The following table describes all technical details of Use Case &lt;code&gt;UC8&lt;/code&gt;:&lt;/p&gt;

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Property&lt;/th&gt;
            &lt;th&gt;Details&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;ID&lt;/td&gt;
            &lt;td&gt;UC8&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Signature&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;hoster&lt;/code&gt; creates standalone thindeck installation&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Primary&lt;/td&gt;
            &lt;td&gt;Hoster&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Actors&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;hoster&lt;/code&gt; as Hoster; &lt;code&gt;system&lt;/code&gt; as System&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Success Flow&lt;/td&gt;
            &lt;td&gt;1. &lt;code&gt;hoster&lt;/code&gt; "downloads the Thindeck app (either as a TGZ archive of RPM package or as a Chef cookbook)"&lt;br/&gt;2. &lt;code&gt;hoster&lt;/code&gt; "installs the app locally on his machine"&lt;br/&gt;3. &lt;code&gt;hoster&lt;/code&gt; "starts the system as a Java standalone app, or a Linux service, or something similar"&lt;br/&gt;4. &lt;code&gt;hoster&lt;/code&gt; creates &lt;code&gt;system&lt;/code&gt;
               &lt;br/&gt;5. &lt;code&gt;system&lt;/code&gt; "is now running as a standalone app on hoster's machine. It uses its local database and local Docker installation. That means that no object in the system will depend on any other Thindeck installation, including our own which we provide as a service. This applies to user profiles, repositories, Docker containers, etc."&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;NFRs&lt;/td&gt;
            &lt;td&gt;PRICING must  "Standalone Thindeck installation is completely free. Thindeck, as a software product, is open source. Anyone should be able to download and install it locally, on his own server(s)"&lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;

&lt;p&gt;Actors taking participation in the Use Case have the following properties:&lt;/p&gt;

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Actor&lt;/th&gt;
            &lt;th&gt;Properties&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;Hoster&lt;/td&gt;
            &lt;td&gt;"an owner of a web server, who wants to install Thindeck locally and host containers himself"&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Hoster&lt;/td&gt;
            &lt;td&gt;"an owner of a web server, who wants to install Thindeck locally and host containers himself"&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;System&lt;/td&gt;
            &lt;td&gt;"System under Development (thindeck itself)"&lt;br/&gt;"a web hosting that deploys itself"&lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;
</html>
      </method>
      <method seal="dc5c52">
         <id>UC1</id>
         <attributes>
            <attribute seal="">specified</attribute>
            <attribute seal="">must</attribute>
         </attributes>
         <mentioned>
            <where>26</where>
            <where>27</where>
            <where>28</where>
            <where>34</where>
            <where>35</where>
            <where>36</where>
            <where>142</where>
         </mentioned>
         <bindings>
            <binding>
               <name>_self</name>
               <type>User</type>
            </binding>
            <binding>
               <name>user</name>
               <type>User</type>
            </binding>
            <binding>
               <name>repo</name>
               <type>Repository</type>
            </binding>
         </bindings>
         <object>user</object>
         <signature>hosts</signature>
         <result>repo</result>
         <steps>
            <step>
               <number>1</number>
               <mentioned>
                  <where>29</where>
               </mentioned>
               <object>user</object>
               <signature>registers</signature>
               <result>repo</result>
               <exceptions>
                  <exception>
                     <when>repo already exists</when>
                     <steps>
                        <step>
                           <number>1</number>
                           <mentioned>
                              <where>142</where>
                           </mentioned>
                           <object>_self</object>
                           <signature>"a message that the repository exists already in his account"</signature>
                        </step>
                     </steps>
                  </exception>
               </exceptions>
            </step>
            <step>
               <number>2</number>
               <mentioned>
                  <where>30</where>
               </mentioned>
               <object>user</object>
               <signature>reads deployment logs</signature>
               <args>
                  <arg>repo</arg>
               </args>
            </step>
            <step>
               <number>3</number>
               <mentioned>
                  <where>31</where>
               </mentioned>
               <object>user</object>
               <signature>reads usage stats</signature>
               <args>
                  <arg>repo</arg>
               </args>
            </step>
            <step>
               <number>4</number>
               <mentioned>
                  <where>32</where>
               </mentioned>
               <object>user</object>
               <signature>compensates usage</signature>
               <args>
                  <arg>repo</arg>
               </args>
            </step>
            <step>
               <number>5</number>
               <mentioned>
                  <where>33</where>
               </mentioned>
               <object>user</object>
               <signature>terminates</signature>
               <result>repo</result>
            </step>
         </steps>
         <nfrs>
            <nfr>
               <id>UX</id>
               <info>
                  <informal>be in English only</informal>
               </info>
            </nfr>
            <nfr>
               <id>WEBDESIGN</id>
               <info>
                  <informal>be 'responsive', see http://en.wikipedia.org/wiki/Responsive_web_design . Since all thindeck site pages will look good on every device, we won't need a separate mobile version of the site</informal>
               </info>
            </nfr>
            <nfr>
               <id>STATELESS</id>
               <info>
                  <informal>all user repositories must be 100% stateless. We should inform users that we will be constantly changing the number of running containers. We may terminate any container at any moment. This means that the software inside the container (repository) should NOT keep any data persistent. They should use other services for persistence, like Amazon DynamoDB, etc</informal>
               </info>
            </nfr>
         </nfrs>
         <markdown>The following table describes all technical details of Use Case `UC1`:

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Property&lt;/th&gt;
            &lt;th&gt;Details&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;ID&lt;/td&gt;
            &lt;td&gt;UC1&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Signature&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;user&lt;/code&gt; hosts &lt;code&gt;repo&lt;/code&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Primary&lt;/td&gt;
            &lt;td&gt;User&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Actors&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;user&lt;/code&gt; as User; &lt;code&gt;repo&lt;/code&gt; as Repository&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Success Flow&lt;/td&gt;
            &lt;td&gt;1. &lt;code&gt;user&lt;/code&gt; registers &lt;code&gt;repo&lt;/code&gt;
               &lt;br/&gt;2. &lt;code&gt;user&lt;/code&gt; reads deployment logs using &lt;code&gt;repo&lt;/code&gt;
               &lt;br/&gt;3. &lt;code&gt;user&lt;/code&gt; reads usage stats using &lt;code&gt;repo&lt;/code&gt;
               &lt;br/&gt;4. &lt;code&gt;user&lt;/code&gt; compensates usage using &lt;code&gt;repo&lt;/code&gt;
               &lt;br/&gt;5. &lt;code&gt;user&lt;/code&gt; terminates &lt;code&gt;repo&lt;/code&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;NFRs&lt;/td&gt;
            &lt;td&gt;UX must  "be in English only"&lt;br/&gt;WEBDESIGN must  "be 'responsive', see http://en.wikipedia.org/wiki/Responsive_web_design . Since all thindeck site pages will look good on every device, we won't need a separate mobile version of the site"&lt;br/&gt;STATELESS must  "all user repositories must be 100% stateless. We should inform users that we will be constantly changing the number of running containers. We may terminate any container at any moment. This means that the software inside the container (repository) should NOT keep any data persistent. They should use other services for persistence, like Amazon DynamoDB, etc"&lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;

Actors taking participation in the Use Case have the following properties:

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Actor&lt;/th&gt;
            &lt;th&gt;Properties&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;User&lt;/td&gt;
            &lt;td&gt;"a person who uses or wants to use hosting and is identified by the system (logged in)"&lt;ul&gt;
                  &lt;li&gt;
                     &lt;code&gt;repo&lt;/code&gt;: Repository&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;URN&lt;/code&gt;:  "a unique identifier of itself, for example urn:github:526301"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;authTokens&lt;/code&gt;:  "a list of auth tokens to each auth provider the user connected to, e.g., Google, Facebook, etc."&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;balance&lt;/code&gt;:  "amount of money available, can be stored as integer number of cents"&lt;/li&gt;
               &lt;/ul&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;User&lt;/td&gt;
            &lt;td&gt;"a person who uses or wants to use hosting and is identified by the system (logged in)"&lt;ul&gt;
                  &lt;li&gt;
                     &lt;code&gt;repo&lt;/code&gt;: Repository&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;URN&lt;/code&gt;:  "a unique identifier of itself, for example urn:github:526301"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;authTokens&lt;/code&gt;:  "a list of auth tokens to each auth provider the user connected to, e.g., Google, Facebook, etc."&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;balance&lt;/code&gt;:  "amount of money available, can be stored as integer number of cents"&lt;/li&gt;
               &lt;/ul&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Repository&lt;/td&gt;
            &lt;td&gt;"a local copy of files and folders being pulled every 5 minutes from some remote source"&lt;ul&gt;
                  &lt;li&gt;
                     &lt;code&gt;name&lt;/code&gt;:  "a unique name of the repo in user's account"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;deployment&lt;/code&gt;: Deployment&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;dockerFile&lt;/code&gt;:  "Docker file"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;manifest&lt;/code&gt;: Manifest&lt;/li&gt;
               &lt;/ul&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;
</markdown>
         <html>&lt;p&gt;The following table describes all technical details of Use Case &lt;code&gt;UC1&lt;/code&gt;:&lt;/p&gt;

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Property&lt;/th&gt;
            &lt;th&gt;Details&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;ID&lt;/td&gt;
            &lt;td&gt;UC1&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Signature&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;user&lt;/code&gt; hosts &lt;code&gt;repo&lt;/code&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Primary&lt;/td&gt;
            &lt;td&gt;User&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Actors&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;user&lt;/code&gt; as User; &lt;code&gt;repo&lt;/code&gt; as Repository&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Success Flow&lt;/td&gt;
            &lt;td&gt;1. &lt;code&gt;user&lt;/code&gt; registers &lt;code&gt;repo&lt;/code&gt;
               &lt;br/&gt;2. &lt;code&gt;user&lt;/code&gt; reads deployment logs using &lt;code&gt;repo&lt;/code&gt;
               &lt;br/&gt;3. &lt;code&gt;user&lt;/code&gt; reads usage stats using &lt;code&gt;repo&lt;/code&gt;
               &lt;br/&gt;4. &lt;code&gt;user&lt;/code&gt; compensates usage using &lt;code&gt;repo&lt;/code&gt;
               &lt;br/&gt;5. &lt;code&gt;user&lt;/code&gt; terminates &lt;code&gt;repo&lt;/code&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;NFRs&lt;/td&gt;
            &lt;td&gt;UX must  "be in English only"&lt;br/&gt;WEBDESIGN must  "be 'responsive', see http://en.wikipedia.org/wiki/Responsive_web_design . Since all thindeck site pages will look good on every device, we won't need a separate mobile version of the site"&lt;br/&gt;STATELESS must  "all user repositories must be 100% stateless. We should inform users that we will be constantly changing the number of running containers. We may terminate any container at any moment. This means that the software inside the container (repository) should NOT keep any data persistent. They should use other services for persistence, like Amazon DynamoDB, etc"&lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;

&lt;p&gt;Actors taking participation in the Use Case have the following properties:&lt;/p&gt;

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Actor&lt;/th&gt;
            &lt;th&gt;Properties&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;User&lt;/td&gt;
            &lt;td&gt;"a person who uses or wants to use hosting and is identified by the system (logged in)"&lt;ul&gt;
                  &lt;li&gt;
                     &lt;code&gt;repo&lt;/code&gt;: Repository&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;URN&lt;/code&gt;:  "a unique identifier of itself, for example urn:github:526301"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;authTokens&lt;/code&gt;:  "a list of auth tokens to each auth provider the user connected to, e.g., Google, Facebook, etc."&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;balance&lt;/code&gt;:  "amount of money available, can be stored as integer number of cents"&lt;/li&gt;
               &lt;/ul&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;User&lt;/td&gt;
            &lt;td&gt;"a person who uses or wants to use hosting and is identified by the system (logged in)"&lt;ul&gt;
                  &lt;li&gt;
                     &lt;code&gt;repo&lt;/code&gt;: Repository&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;URN&lt;/code&gt;:  "a unique identifier of itself, for example urn:github:526301"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;authTokens&lt;/code&gt;:  "a list of auth tokens to each auth provider the user connected to, e.g., Google, Facebook, etc."&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;balance&lt;/code&gt;:  "amount of money available, can be stored as integer number of cents"&lt;/li&gt;
               &lt;/ul&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Repository&lt;/td&gt;
            &lt;td&gt;"a local copy of files and folders being pulled every 5 minutes from some remote source"&lt;ul&gt;
                  &lt;li&gt;
                     &lt;code&gt;name&lt;/code&gt;:  "a unique name of the repo in user's account"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;deployment&lt;/code&gt;: Deployment&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;dockerFile&lt;/code&gt;:  "Docker file"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;manifest&lt;/code&gt;: Manifest&lt;/li&gt;
               &lt;/ul&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;
</html>
      </method>
      <method seal="d407f3">
         <id>UC9.1</id>
         <attributes>
            <attribute seal="">specified</attribute>
            <attribute seal="">should</attribute>
         </attributes>
         <mentioned>
            <where>50</where>
            <where>51</where>
            <where>52</where>
         </mentioned>
         <bindings>
            <binding>
               <name>_self</name>
               <type>Anonymous</type>
            </binding>
            <binding>
               <name>anonymous</name>
               <type>Anonymous</type>
            </binding>
            <binding>
               <name>frontPage</name>
               <type>FrontPage</type>
            </binding>
         </bindings>
         <object>anonymous</object>
         <signature>explores thindeck</signature>
         <steps>
            <step>
               <number>1</number>
               <mentioned>
                  <where>53</where>
               </mentioned>
               <object>anonymous</object>
               <signature>reads</signature>
               <result>frontPage</result>
            </step>
            <step>
               <number>2</number>
               <mentioned>
                  <where>54</where>
               </mentioned>
               <object>anonymous</object>
               <signature>"reads the stats page containing our runtime stats, similar to https://status.github.com/"</signature>
            </step>
            <step>
               <number>3</number>
               <mentioned>
                  <where>55</where>
               </mentioned>
               <object>anonymous</object>
               <signature>"reads our terms page including all the legal wordings"</signature>
            </step>
         </steps>
         <markdown>The following table describes all technical details of Use Case `UC9.1`:

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Property&lt;/th&gt;
            &lt;th&gt;Details&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;ID&lt;/td&gt;
            &lt;td&gt;UC9.1&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Signature&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;anonymous&lt;/code&gt; explores thindeck&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Primary&lt;/td&gt;
            &lt;td&gt;Anonymous&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Actors&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;anonymous&lt;/code&gt; as Anonymous; &lt;code&gt;frontPage&lt;/code&gt; as FrontPage&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Success Flow&lt;/td&gt;
            &lt;td&gt;1. &lt;code&gt;anonymous&lt;/code&gt; reads &lt;code&gt;frontPage&lt;/code&gt;
               &lt;br/&gt;2. &lt;code&gt;anonymous&lt;/code&gt; "reads the stats page containing our runtime stats, similar to https://status.github.com/"&lt;br/&gt;3. &lt;code&gt;anonymous&lt;/code&gt; "reads our terms page including all the legal wordings"&lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;

Actors taking participation in the Use Case have the following properties:

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Actor&lt;/th&gt;
            &lt;th&gt;Properties&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;Anonymous&lt;/td&gt;
            &lt;td&gt;"a person who is not identified in the system (not logged in). He can actually have a User account in our System, but we can't tell it until he logs in"&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Anonymous&lt;/td&gt;
            &lt;td&gt;"a person who is not identified in the system (not logged in). He can actually have a User account in our System, but we can't tell it until he logs in"&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;FrontPage&lt;/td&gt;
            &lt;td&gt;"a front page of Thindeck for Anonymous which contains all the information about pricing, 'how it works', etc."&lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;
</markdown>
         <html>&lt;p&gt;The following table describes all technical details of Use Case &lt;code&gt;UC9.1&lt;/code&gt;:&lt;/p&gt;

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Property&lt;/th&gt;
            &lt;th&gt;Details&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;ID&lt;/td&gt;
            &lt;td&gt;UC9.1&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Signature&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;anonymous&lt;/code&gt; explores thindeck&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Primary&lt;/td&gt;
            &lt;td&gt;Anonymous&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Actors&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;anonymous&lt;/code&gt; as Anonymous; &lt;code&gt;frontPage&lt;/code&gt; as FrontPage&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Success Flow&lt;/td&gt;
            &lt;td&gt;1. &lt;code&gt;anonymous&lt;/code&gt; reads &lt;code&gt;frontPage&lt;/code&gt;
               &lt;br/&gt;2. &lt;code&gt;anonymous&lt;/code&gt; "reads the stats page containing our runtime stats, similar to https://status.github.com/"&lt;br/&gt;3. &lt;code&gt;anonymous&lt;/code&gt; "reads our terms page including all the legal wordings"&lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;

&lt;p&gt;Actors taking participation in the Use Case have the following properties:&lt;/p&gt;

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Actor&lt;/th&gt;
            &lt;th&gt;Properties&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;Anonymous&lt;/td&gt;
            &lt;td&gt;"a person who is not identified in the system (not logged in). He can actually have a User account in our System, but we can't tell it until he logs in"&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Anonymous&lt;/td&gt;
            &lt;td&gt;"a person who is not identified in the system (not logged in). He can actually have a User account in our System, but we can't tell it until he logs in"&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;FrontPage&lt;/td&gt;
            &lt;td&gt;"a front page of Thindeck for Anonymous which contains all the information about pricing, 'how it works', etc."&lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;
</html>
      </method>
      <method seal="82c9cb">
         <id>UC9.2</id>
         <attributes>
            <attribute seal="">specified</attribute>
            <attribute seal="">must</attribute>
         </attributes>
         <mentioned>
            <where>57</where>
            <where>58</where>
            <where>59</where>
            <where>66</where>
            <where>68</where>
         </mentioned>
         <bindings>
            <binding>
               <name>_self</name>
               <type>Anonymous</type>
            </binding>
            <binding>
               <name>anonymous</name>
               <type>Anonymous</type>
            </binding>
            <binding>
               <name>user</name>
               <type>User</type>
            </binding>
         </bindings>
         <object>anonymous</object>
         <signature>signs up</signature>
         <steps>
            <step>
               <number>1</number>
               <mentioned>
                  <where>60</where>
               </mentioned>
               <object>anonymous</object>
               <signature>"initiates sign in via one of OAuth providers from this list: Google Plus, Facebook, Github, or Twitter."</signature>
            </step>
            <step>
               <number>2</number>
               <mentioned>
                  <where>61</where>
               </mentioned>
               <object>system</object>
               <signature>"requests permission from the OAuth provider chosen by the anonymous"</signature>
               <exceptions>
                  <exception>
                     <when>a user is already signed up</when>
                     <steps>
                        <step>
                           <number>1</number>
                           <mentioned>
                              <where>66</where>
                           </mentioned>
                           <object>anonymous</object>
                           <signature>logs in</signature>
                        </step>
                     </steps>
                  </exception>
                  <exception>
                     <when>an OAuth provider denied access</when>
                     <steps>
                        <step>
                           <number>1</number>
                           <mentioned>
                              <where>68</where>
                           </mentioned>
                           <object>_self</object>
                           <signature>"Not authorized by chosen OAuth provider"</signature>
                        </step>
                     </steps>
                  </exception>
               </exceptions>
            </step>
            <step>
               <number>3</number>
               <mentioned>
                  <where>62</where>
               </mentioned>
               <object>system</object>
               <signature>creates</signature>
               <result>user</result>
            </step>
            <step>
               <number>4</number>
               <mentioned>
                  <where>63</where>
               </mentioned>
               <object>system</object>
               <signature>"adds $5 to the user.balance"</signature>
            </step>
            <step>
               <number>5</number>
               <mentioned>
                  <where>64</where>
               </mentioned>
               <object>anonymous</object>
               <signature>logs in</signature>
            </step>
         </steps>
         <markdown>The following table describes all technical details of Use Case `UC9.2`:

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Property&lt;/th&gt;
            &lt;th&gt;Details&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;ID&lt;/td&gt;
            &lt;td&gt;UC9.2&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Signature&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;anonymous&lt;/code&gt; signs up&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Primary&lt;/td&gt;
            &lt;td&gt;Anonymous&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Actors&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;anonymous&lt;/code&gt; as Anonymous; &lt;code&gt;user&lt;/code&gt; as User&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Success Flow&lt;/td&gt;
            &lt;td&gt;1. &lt;code&gt;anonymous&lt;/code&gt; "initiates sign in via one of OAuth providers from this list: Google Plus, Facebook, Github, or Twitter."&lt;br/&gt;2. &lt;code&gt;system&lt;/code&gt; "requests permission from the OAuth provider chosen by the anonymous"&lt;br/&gt;3. &lt;code&gt;system&lt;/code&gt; creates &lt;code&gt;user&lt;/code&gt;
               &lt;br/&gt;4. &lt;code&gt;system&lt;/code&gt; "adds $5 to the user.balance"&lt;br/&gt;5. &lt;code&gt;anonymous&lt;/code&gt; logs in&lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;

Actors taking participation in the Use Case have the following properties:

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Actor&lt;/th&gt;
            &lt;th&gt;Properties&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;Anonymous&lt;/td&gt;
            &lt;td&gt;"a person who is not identified in the system (not logged in). He can actually have a User account in our System, but we can't tell it until he logs in"&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Anonymous&lt;/td&gt;
            &lt;td&gt;"a person who is not identified in the system (not logged in). He can actually have a User account in our System, but we can't tell it until he logs in"&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;User&lt;/td&gt;
            &lt;td&gt;"a person who uses or wants to use hosting and is identified by the system (logged in)"&lt;ul&gt;
                  &lt;li&gt;
                     &lt;code&gt;repo&lt;/code&gt;: Repository&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;URN&lt;/code&gt;:  "a unique identifier of itself, for example urn:github:526301"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;authTokens&lt;/code&gt;:  "a list of auth tokens to each auth provider the user connected to, e.g., Google, Facebook, etc."&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;balance&lt;/code&gt;:  "amount of money available, can be stored as integer number of cents"&lt;/li&gt;
               &lt;/ul&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;
</markdown>
         <html>&lt;p&gt;The following table describes all technical details of Use Case &lt;code&gt;UC9.2&lt;/code&gt;:&lt;/p&gt;

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Property&lt;/th&gt;
            &lt;th&gt;Details&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;ID&lt;/td&gt;
            &lt;td&gt;UC9.2&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Signature&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;anonymous&lt;/code&gt; signs up&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Primary&lt;/td&gt;
            &lt;td&gt;Anonymous&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Actors&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;anonymous&lt;/code&gt; as Anonymous; &lt;code&gt;user&lt;/code&gt; as User&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Success Flow&lt;/td&gt;
            &lt;td&gt;1. &lt;code&gt;anonymous&lt;/code&gt; "initiates sign in via one of OAuth providers from this list: Google Plus, Facebook, Github, or Twitter."&lt;br/&gt;2. &lt;code&gt;system&lt;/code&gt; "requests permission from the OAuth provider chosen by the anonymous"&lt;br/&gt;3. &lt;code&gt;system&lt;/code&gt; creates &lt;code&gt;user&lt;/code&gt;
               &lt;br/&gt;4. &lt;code&gt;system&lt;/code&gt; "adds $5 to the user.balance"&lt;br/&gt;5. &lt;code&gt;anonymous&lt;/code&gt; logs in&lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;

&lt;p&gt;Actors taking participation in the Use Case have the following properties:&lt;/p&gt;

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Actor&lt;/th&gt;
            &lt;th&gt;Properties&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;Anonymous&lt;/td&gt;
            &lt;td&gt;"a person who is not identified in the system (not logged in). He can actually have a User account in our System, but we can't tell it until he logs in"&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Anonymous&lt;/td&gt;
            &lt;td&gt;"a person who is not identified in the system (not logged in). He can actually have a User account in our System, but we can't tell it until he logs in"&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;User&lt;/td&gt;
            &lt;td&gt;"a person who uses or wants to use hosting and is identified by the system (logged in)"&lt;ul&gt;
                  &lt;li&gt;
                     &lt;code&gt;repo&lt;/code&gt;: Repository&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;URN&lt;/code&gt;:  "a unique identifier of itself, for example urn:github:526301"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;authTokens&lt;/code&gt;:  "a list of auth tokens to each auth provider the user connected to, e.g., Google, Facebook, etc."&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;balance&lt;/code&gt;:  "amount of money available, can be stored as integer number of cents"&lt;/li&gt;
               &lt;/ul&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;
</html>
      </method>
      <method seal="b6d76b">
         <id>UC9.3</id>
         <attributes>
            <attribute seal="">specified</attribute>
            <attribute seal="">must</attribute>
         </attributes>
         <mentioned>
            <where>70</where>
            <where>71</where>
            <where>72</where>
         </mentioned>
         <bindings>
            <binding>
               <name>_self</name>
               <type>Anonymous</type>
            </binding>
            <binding>
               <name>anonymous</name>
               <type>Anonymous</type>
            </binding>
            <binding>
               <name>user</name>
               <type>User</type>
            </binding>
         </bindings>
         <object>anonymous</object>
         <signature>logs in</signature>
         <args>
            <arg>user</arg>
         </args>
         <steps>
            <step>
               <number>1</number>
               <mentioned>
                  <where>73</where>
               </mentioned>
               <object>system</object>
               <signature>"from now on treats the anonymous as a User"</signature>
            </step>
         </steps>
         <markdown>The following table describes all technical details of Use Case `UC9.3`:

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Property&lt;/th&gt;
            &lt;th&gt;Details&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;ID&lt;/td&gt;
            &lt;td&gt;UC9.3&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Signature&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;anonymous&lt;/code&gt; logs in using &lt;code&gt;user&lt;/code&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Primary&lt;/td&gt;
            &lt;td&gt;Anonymous&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Actors&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;anonymous&lt;/code&gt; as Anonymous; &lt;code&gt;user&lt;/code&gt; as User&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Success Flow&lt;/td&gt;
            &lt;td&gt;1. &lt;code&gt;system&lt;/code&gt; "from now on treats the anonymous as a User"&lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;

Actors taking participation in the Use Case have the following properties:

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Actor&lt;/th&gt;
            &lt;th&gt;Properties&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;Anonymous&lt;/td&gt;
            &lt;td&gt;"a person who is not identified in the system (not logged in). He can actually have a User account in our System, but we can't tell it until he logs in"&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Anonymous&lt;/td&gt;
            &lt;td&gt;"a person who is not identified in the system (not logged in). He can actually have a User account in our System, but we can't tell it until he logs in"&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;User&lt;/td&gt;
            &lt;td&gt;"a person who uses or wants to use hosting and is identified by the system (logged in)"&lt;ul&gt;
                  &lt;li&gt;
                     &lt;code&gt;repo&lt;/code&gt;: Repository&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;URN&lt;/code&gt;:  "a unique identifier of itself, for example urn:github:526301"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;authTokens&lt;/code&gt;:  "a list of auth tokens to each auth provider the user connected to, e.g., Google, Facebook, etc."&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;balance&lt;/code&gt;:  "amount of money available, can be stored as integer number of cents"&lt;/li&gt;
               &lt;/ul&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;
</markdown>
         <html>&lt;p&gt;The following table describes all technical details of Use Case &lt;code&gt;UC9.3&lt;/code&gt;:&lt;/p&gt;

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Property&lt;/th&gt;
            &lt;th&gt;Details&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;ID&lt;/td&gt;
            &lt;td&gt;UC9.3&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Signature&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;anonymous&lt;/code&gt; logs in using &lt;code&gt;user&lt;/code&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Primary&lt;/td&gt;
            &lt;td&gt;Anonymous&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Actors&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;anonymous&lt;/code&gt; as Anonymous; &lt;code&gt;user&lt;/code&gt; as User&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Success Flow&lt;/td&gt;
            &lt;td&gt;1. &lt;code&gt;system&lt;/code&gt; "from now on treats the anonymous as a User"&lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;

&lt;p&gt;Actors taking participation in the Use Case have the following properties:&lt;/p&gt;

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Actor&lt;/th&gt;
            &lt;th&gt;Properties&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;Anonymous&lt;/td&gt;
            &lt;td&gt;"a person who is not identified in the system (not logged in). He can actually have a User account in our System, but we can't tell it until he logs in"&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Anonymous&lt;/td&gt;
            &lt;td&gt;"a person who is not identified in the system (not logged in). He can actually have a User account in our System, but we can't tell it until he logs in"&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;User&lt;/td&gt;
            &lt;td&gt;"a person who uses or wants to use hosting and is identified by the system (logged in)"&lt;ul&gt;
                  &lt;li&gt;
                     &lt;code&gt;repo&lt;/code&gt;: Repository&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;URN&lt;/code&gt;:  "a unique identifier of itself, for example urn:github:526301"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;authTokens&lt;/code&gt;:  "a list of auth tokens to each auth provider the user connected to, e.g., Google, Facebook, etc."&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;balance&lt;/code&gt;:  "amount of money available, can be stored as integer number of cents"&lt;/li&gt;
               &lt;/ul&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;
</html>
      </method>
      <method seal="49580c">
         <id>UC11</id>
         <attributes>
            <attribute seal="">specified</attribute>
            <attribute seal="">must</attribute>
         </attributes>
         <mentioned>
            <where>75</where>
            <where>76</where>
            <where>77</where>
         </mentioned>
         <bindings>
            <binding>
               <name>_self</name>
               <type>User</type>
            </binding>
            <binding>
               <name>user</name>
               <type>User</type>
            </binding>
         </bindings>
         <object>user</object>
         <signature>logs out</signature>
         <steps>
            <step>
               <number>1</number>
               <mentioned>
                  <where>78</where>
               </mentioned>
               <object>system</object>
               <signature>"from now on treats the user as anonymous and displays a public page"</signature>
            </step>
         </steps>
         <markdown>The following table describes all technical details of Use Case `UC11`:

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Property&lt;/th&gt;
            &lt;th&gt;Details&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;ID&lt;/td&gt;
            &lt;td&gt;UC11&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Signature&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;user&lt;/code&gt; logs out&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Primary&lt;/td&gt;
            &lt;td&gt;User&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Actors&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;user&lt;/code&gt; as User&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Success Flow&lt;/td&gt;
            &lt;td&gt;1. &lt;code&gt;system&lt;/code&gt; "from now on treats the user as anonymous and displays a public page"&lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;

Actors taking participation in the Use Case have the following properties:

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Actor&lt;/th&gt;
            &lt;th&gt;Properties&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;User&lt;/td&gt;
            &lt;td&gt;"a person who uses or wants to use hosting and is identified by the system (logged in)"&lt;ul&gt;
                  &lt;li&gt;
                     &lt;code&gt;repo&lt;/code&gt;: Repository&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;URN&lt;/code&gt;:  "a unique identifier of itself, for example urn:github:526301"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;authTokens&lt;/code&gt;:  "a list of auth tokens to each auth provider the user connected to, e.g., Google, Facebook, etc."&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;balance&lt;/code&gt;:  "amount of money available, can be stored as integer number of cents"&lt;/li&gt;
               &lt;/ul&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;User&lt;/td&gt;
            &lt;td&gt;"a person who uses or wants to use hosting and is identified by the system (logged in)"&lt;ul&gt;
                  &lt;li&gt;
                     &lt;code&gt;repo&lt;/code&gt;: Repository&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;URN&lt;/code&gt;:  "a unique identifier of itself, for example urn:github:526301"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;authTokens&lt;/code&gt;:  "a list of auth tokens to each auth provider the user connected to, e.g., Google, Facebook, etc."&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;balance&lt;/code&gt;:  "amount of money available, can be stored as integer number of cents"&lt;/li&gt;
               &lt;/ul&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;
</markdown>
         <html>&lt;p&gt;The following table describes all technical details of Use Case &lt;code&gt;UC11&lt;/code&gt;:&lt;/p&gt;

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Property&lt;/th&gt;
            &lt;th&gt;Details&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;ID&lt;/td&gt;
            &lt;td&gt;UC11&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Signature&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;user&lt;/code&gt; logs out&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Primary&lt;/td&gt;
            &lt;td&gt;User&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Actors&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;user&lt;/code&gt; as User&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Success Flow&lt;/td&gt;
            &lt;td&gt;1. &lt;code&gt;system&lt;/code&gt; "from now on treats the user as anonymous and displays a public page"&lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;

&lt;p&gt;Actors taking participation in the Use Case have the following properties:&lt;/p&gt;

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Actor&lt;/th&gt;
            &lt;th&gt;Properties&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;User&lt;/td&gt;
            &lt;td&gt;"a person who uses or wants to use hosting and is identified by the system (logged in)"&lt;ul&gt;
                  &lt;li&gt;
                     &lt;code&gt;repo&lt;/code&gt;: Repository&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;URN&lt;/code&gt;:  "a unique identifier of itself, for example urn:github:526301"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;authTokens&lt;/code&gt;:  "a list of auth tokens to each auth provider the user connected to, e.g., Google, Facebook, etc."&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;balance&lt;/code&gt;:  "amount of money available, can be stored as integer number of cents"&lt;/li&gt;
               &lt;/ul&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;User&lt;/td&gt;
            &lt;td&gt;"a person who uses or wants to use hosting and is identified by the system (logged in)"&lt;ul&gt;
                  &lt;li&gt;
                     &lt;code&gt;repo&lt;/code&gt;: Repository&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;URN&lt;/code&gt;:  "a unique identifier of itself, for example urn:github:526301"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;authTokens&lt;/code&gt;:  "a list of auth tokens to each auth provider the user connected to, e.g., Google, Facebook, etc."&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;balance&lt;/code&gt;:  "amount of money available, can be stored as integer number of cents"&lt;/li&gt;
               &lt;/ul&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;
</html>
      </method>
      <method seal="cd95d6">
         <id>UC2</id>
         <attributes>
            <attribute seal="">specified</attribute>
            <attribute seal="">must</attribute>
         </attributes>
         <mentioned>
            <where>144</where>
            <where>145</where>
            <where>146</where>
            <where>155</where>
         </mentioned>
         <bindings>
            <binding>
               <name>_self</name>
               <type>User</type>
            </binding>
            <binding>
               <name>repo</name>
               <type>Repository</type>
            </binding>
         </bindings>
         <object>_self</object>
         <signature>registers</signature>
         <steps>
            <step>
               <number>1</number>
               <mentioned>
                  <where>147</where>
               </mentioned>
               <object>user</object>
               <signature>"enters a new unique name of the repository, provides the data required for authorization,
    depending on the type of chosen repository, and confirms entered data"</signature>
               <exceptions>
                  <exception>
                     <when>data is incorrect</when>
                     <steps>
                        <step>
                           <number>1</number>
                           <mentioned>
                              <where>155</where>
                           </mentioned>
                           <object>_self</object>
                           <signature>"repository cannot be registered"</signature>
                        </step>
                     </steps>
                  </exception>
               </exceptions>
            </step>
            <step>
               <number>2</number>
               <mentioned>
                  <where>149</where>
               </mentioned>
               <object>system</object>
               <signature>creates</signature>
               <result>repo</result>
            </step>
            <step>
               <number>3</number>
               <mentioned>
                  <where>150</where>
               </mentioned>
               <object>system</object>
               <signature>"displays a repo in the list of other repositories in the user account"</signature>
            </step>
            <step>
               <number>4</number>
               <mentioned>
                  <where>151</where>
               </mentioned>
               <object>system</object>
               <signature>deploys</signature>
               <result>repo</result>
            </step>
            <step>
               <number>5</number>
               <mentioned>
                  <where>152</where>
               </mentioned>
               <object>system</object>
               <signature>reads</signature>
               <result>repo</result>
            </step>
            <step>
               <number>6</number>
               <mentioned>
                  <where>153</where>
               </mentioned>
               <object>system</object>
               <signature>redeploys</signature>
               <result>repo</result>
            </step>
         </steps>
         <markdown>The following table describes all technical details of Use Case `UC2`:

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Property&lt;/th&gt;
            &lt;th&gt;Details&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;ID&lt;/td&gt;
            &lt;td&gt;UC2&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Signature&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;_self&lt;/code&gt; registers&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Primary&lt;/td&gt;
            &lt;td&gt;User&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Actors&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;repo&lt;/code&gt; as Repository&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Success Flow&lt;/td&gt;
            &lt;td&gt;1. &lt;code&gt;user&lt;/code&gt; "enters a new unique name of the repository, provides the data required for authorization,
    depending on the type of chosen repository, and confirms entered data"&lt;br/&gt;2. &lt;code&gt;system&lt;/code&gt; creates &lt;code&gt;repo&lt;/code&gt;
               &lt;br/&gt;3. &lt;code&gt;system&lt;/code&gt; "displays a repo in the list of other repositories in the user account"&lt;br/&gt;4. &lt;code&gt;system&lt;/code&gt; deploys &lt;code&gt;repo&lt;/code&gt;
               &lt;br/&gt;5. &lt;code&gt;system&lt;/code&gt; reads &lt;code&gt;repo&lt;/code&gt;
               &lt;br/&gt;6. &lt;code&gt;system&lt;/code&gt; redeploys &lt;code&gt;repo&lt;/code&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;

Actors taking participation in the Use Case have the following properties:

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Actor&lt;/th&gt;
            &lt;th&gt;Properties&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;User&lt;/td&gt;
            &lt;td&gt;"a person who uses or wants to use hosting and is identified by the system (logged in)"&lt;ul&gt;
                  &lt;li&gt;
                     &lt;code&gt;repo&lt;/code&gt;: Repository&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;URN&lt;/code&gt;:  "a unique identifier of itself, for example urn:github:526301"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;authTokens&lt;/code&gt;:  "a list of auth tokens to each auth provider the user connected to, e.g., Google, Facebook, etc."&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;balance&lt;/code&gt;:  "amount of money available, can be stored as integer number of cents"&lt;/li&gt;
               &lt;/ul&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Repository&lt;/td&gt;
            &lt;td&gt;"a local copy of files and folders being pulled every 5 minutes from some remote source"&lt;ul&gt;
                  &lt;li&gt;
                     &lt;code&gt;name&lt;/code&gt;:  "a unique name of the repo in user's account"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;deployment&lt;/code&gt;: Deployment&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;dockerFile&lt;/code&gt;:  "Docker file"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;manifest&lt;/code&gt;: Manifest&lt;/li&gt;
               &lt;/ul&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;
</markdown>
         <html>&lt;p&gt;The following table describes all technical details of Use Case &lt;code&gt;UC2&lt;/code&gt;:&lt;/p&gt;

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Property&lt;/th&gt;
            &lt;th&gt;Details&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;ID&lt;/td&gt;
            &lt;td&gt;UC2&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Signature&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;_self&lt;/code&gt; registers&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Primary&lt;/td&gt;
            &lt;td&gt;User&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Actors&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;repo&lt;/code&gt; as Repository&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Success Flow&lt;/td&gt;
            &lt;td&gt;1. &lt;code&gt;user&lt;/code&gt; "enters a new unique name of the repository, provides the data required for authorization,
    depending on the type of chosen repository, and confirms entered data"&lt;br/&gt;2. &lt;code&gt;system&lt;/code&gt; creates &lt;code&gt;repo&lt;/code&gt;
               &lt;br/&gt;3. &lt;code&gt;system&lt;/code&gt; "displays a repo in the list of other repositories in the user account"&lt;br/&gt;4. &lt;code&gt;system&lt;/code&gt; deploys &lt;code&gt;repo&lt;/code&gt;
               &lt;br/&gt;5. &lt;code&gt;system&lt;/code&gt; reads &lt;code&gt;repo&lt;/code&gt;
               &lt;br/&gt;6. &lt;code&gt;system&lt;/code&gt; redeploys &lt;code&gt;repo&lt;/code&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;

&lt;p&gt;Actors taking participation in the Use Case have the following properties:&lt;/p&gt;

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Actor&lt;/th&gt;
            &lt;th&gt;Properties&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;User&lt;/td&gt;
            &lt;td&gt;"a person who uses or wants to use hosting and is identified by the system (logged in)"&lt;ul&gt;
                  &lt;li&gt;
                     &lt;code&gt;repo&lt;/code&gt;: Repository&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;URN&lt;/code&gt;:  "a unique identifier of itself, for example urn:github:526301"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;authTokens&lt;/code&gt;:  "a list of auth tokens to each auth provider the user connected to, e.g., Google, Facebook, etc."&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;balance&lt;/code&gt;:  "amount of money available, can be stored as integer number of cents"&lt;/li&gt;
               &lt;/ul&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Repository&lt;/td&gt;
            &lt;td&gt;"a local copy of files and folders being pulled every 5 minutes from some remote source"&lt;ul&gt;
                  &lt;li&gt;
                     &lt;code&gt;name&lt;/code&gt;:  "a unique name of the repo in user's account"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;deployment&lt;/code&gt;: Deployment&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;dockerFile&lt;/code&gt;:  "Docker file"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;manifest&lt;/code&gt;: Manifest&lt;/li&gt;
               &lt;/ul&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;
</html>
      </method>
      <method seal="0614b8">
         <id>UC2.1</id>
         <attributes>
            <attribute seal="">specified</attribute>
            <attribute seal="">must</attribute>
         </attributes>
         <mentioned>
            <where>157</where>
            <where>158</where>
            <where>159</where>
         </mentioned>
         <bindings>
            <binding>
               <name>_self</name>
               <type>System</type>
            </binding>
            <binding>
               <name>system</name>
               <type>System</type>
            </binding>
            <binding>
               <name>repo</name>
               <type>Repository</type>
            </binding>
            <binding>
               <name>containers</name>
               <type>Container</type>
            </binding>
         </bindings>
         <object>system</object>
         <signature>redeploys</signature>
         <args>
            <arg>repo</arg>
         </args>
         <steps>
            <step>
               <number>1</number>
               <mentioned>
                  <where>160</where>
               </mentioned>
               <object>system</object>
               <signature>deletes</signature>
               <result>containers</result>
            </step>
            <step>
               <number>2</number>
               <mentioned>
                  <where>161</where>
               </mentioned>
               <object>system</object>
               <signature>deploys</signature>
               <result>repo</result>
            </step>
         </steps>
         <markdown>The following table describes all technical details of Use Case `UC2.1`:

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Property&lt;/th&gt;
            &lt;th&gt;Details&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;ID&lt;/td&gt;
            &lt;td&gt;UC2.1&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Signature&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;system&lt;/code&gt; redeploys using &lt;code&gt;repo&lt;/code&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Primary&lt;/td&gt;
            &lt;td&gt;System&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Actors&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;system&lt;/code&gt; as System; &lt;code&gt;repo&lt;/code&gt; as Repository; &lt;code&gt;containers&lt;/code&gt; as Container&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Success Flow&lt;/td&gt;
            &lt;td&gt;1. &lt;code&gt;system&lt;/code&gt; deletes &lt;code&gt;containers&lt;/code&gt;
               &lt;br/&gt;2. &lt;code&gt;system&lt;/code&gt; deploys &lt;code&gt;repo&lt;/code&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;

Actors taking participation in the Use Case have the following properties:

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Actor&lt;/th&gt;
            &lt;th&gt;Properties&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;System&lt;/td&gt;
            &lt;td&gt;"System under Development (thindeck itself)"&lt;br/&gt;"a web hosting that deploys itself"&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;System&lt;/td&gt;
            &lt;td&gt;"System under Development (thindeck itself)"&lt;br/&gt;"a web hosting that deploys itself"&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Repository&lt;/td&gt;
            &lt;td&gt;"a local copy of files and folders being pulled every 5 minutes from some remote source"&lt;ul&gt;
                  &lt;li&gt;
                     &lt;code&gt;name&lt;/code&gt;:  "a unique name of the repo in user's account"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;deployment&lt;/code&gt;: Deployment&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;dockerFile&lt;/code&gt;:  "Docker file"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;manifest&lt;/code&gt;: Manifest&lt;/li&gt;
               &lt;/ul&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Container&lt;/td&gt;
            &lt;td&gt;"a virtual operating system running user's application build from Repository"&lt;ul&gt;
                  &lt;li&gt;
                     &lt;code&gt;app&lt;/code&gt;: Application&lt;/li&gt;
               &lt;/ul&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;
</markdown>
         <html>&lt;p&gt;The following table describes all technical details of Use Case &lt;code&gt;UC2.1&lt;/code&gt;:&lt;/p&gt;

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Property&lt;/th&gt;
            &lt;th&gt;Details&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;ID&lt;/td&gt;
            &lt;td&gt;UC2.1&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Signature&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;system&lt;/code&gt; redeploys using &lt;code&gt;repo&lt;/code&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Primary&lt;/td&gt;
            &lt;td&gt;System&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Actors&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;system&lt;/code&gt; as System; &lt;code&gt;repo&lt;/code&gt; as Repository; &lt;code&gt;containers&lt;/code&gt; as Container&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Success Flow&lt;/td&gt;
            &lt;td&gt;1. &lt;code&gt;system&lt;/code&gt; deletes &lt;code&gt;containers&lt;/code&gt;
               &lt;br/&gt;2. &lt;code&gt;system&lt;/code&gt; deploys &lt;code&gt;repo&lt;/code&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;

&lt;p&gt;Actors taking participation in the Use Case have the following properties:&lt;/p&gt;

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Actor&lt;/th&gt;
            &lt;th&gt;Properties&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;System&lt;/td&gt;
            &lt;td&gt;"System under Development (thindeck itself)"&lt;br/&gt;"a web hosting that deploys itself"&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;System&lt;/td&gt;
            &lt;td&gt;"System under Development (thindeck itself)"&lt;br/&gt;"a web hosting that deploys itself"&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Repository&lt;/td&gt;
            &lt;td&gt;"a local copy of files and folders being pulled every 5 minutes from some remote source"&lt;ul&gt;
                  &lt;li&gt;
                     &lt;code&gt;name&lt;/code&gt;:  "a unique name of the repo in user's account"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;deployment&lt;/code&gt;: Deployment&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;dockerFile&lt;/code&gt;:  "Docker file"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;manifest&lt;/code&gt;: Manifest&lt;/li&gt;
               &lt;/ul&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Container&lt;/td&gt;
            &lt;td&gt;"a virtual operating system running user's application build from Repository"&lt;ul&gt;
                  &lt;li&gt;
                     &lt;code&gt;app&lt;/code&gt;: Application&lt;/li&gt;
               &lt;/ul&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;
</html>
      </method>
      <method seal="09017c">
         <id>UC3</id>
         <attributes>
            <attribute seal="">specified</attribute>
            <attribute seal="">must</attribute>
         </attributes>
         <mentioned>
            <where>163</where>
            <where>164</where>
            <where>165</where>
            <where>171</where>
         </mentioned>
         <bindings>
            <binding>
               <name>_self</name>
               <type>System</type>
            </binding>
            <binding>
               <name>system</name>
               <type>System</type>
            </binding>
            <binding>
               <name>repo</name>
               <type>Repository</type>
            </binding>
         </bindings>
         <object>system</object>
         <signature>deploys</signature>
         <args>
            <arg>repo</arg>
         </args>
         <steps>
            <step>
               <number>1</number>
               <mentioned>
                  <where>166</where>
               </mentioned>
               <object>system</object>
               <signature>"starts a new Docker container with the latest version of the source code, configuring it as defined in Dockerfile"</signature>
            </step>
            <step>
               <number>2</number>
               <mentioned>
                  <where>167</where>
               </mentioned>
               <object>system</object>
               <signature>"applies the configuration defined in Manifest file to the container after it is started"</signature>
            </step>
            <step>
               <number>3</number>
               <mentioned>
                  <where>168</where>
               </mentioned>
               <object>system</object>
               <signature>"tracks the usage of CPU time and traffic by the container"</signature>
            </step>
         </steps>
         <nfrs>
            <nfr>
               <id>PERF</id>
               <info>
                  <informal>each thindeck server should be able to host 4 actively working
    containers inside it, altogether handling 3M hits and 200 Gb of traffic
    per month, or 100K and 6.6 Gb per day</informal>
               </info>
            </nfr>
         </nfrs>
         <markdown>The following table describes all technical details of Use Case `UC3`:

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Property&lt;/th&gt;
            &lt;th&gt;Details&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;ID&lt;/td&gt;
            &lt;td&gt;UC3&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Signature&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;system&lt;/code&gt; deploys using &lt;code&gt;repo&lt;/code&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Primary&lt;/td&gt;
            &lt;td&gt;System&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Actors&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;system&lt;/code&gt; as System; &lt;code&gt;repo&lt;/code&gt; as Repository&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Success Flow&lt;/td&gt;
            &lt;td&gt;1. &lt;code&gt;system&lt;/code&gt; "starts a new Docker container with the latest version of the source code, configuring it as defined in Dockerfile"&lt;br/&gt;2. &lt;code&gt;system&lt;/code&gt; "applies the configuration defined in Manifest file to the container after it is started"&lt;br/&gt;3. &lt;code&gt;system&lt;/code&gt; "tracks the usage of CPU time and traffic by the container"&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;NFRs&lt;/td&gt;
            &lt;td&gt;PERF must  "each thindeck server should be able to host 4 actively working containers inside it, altogether handling 3M hits and 200 Gb of traffic per month, or 100K and 6.6 Gb per day"&lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;

Actors taking participation in the Use Case have the following properties:

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Actor&lt;/th&gt;
            &lt;th&gt;Properties&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;System&lt;/td&gt;
            &lt;td&gt;"System under Development (thindeck itself)"&lt;br/&gt;"a web hosting that deploys itself"&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;System&lt;/td&gt;
            &lt;td&gt;"System under Development (thindeck itself)"&lt;br/&gt;"a web hosting that deploys itself"&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Repository&lt;/td&gt;
            &lt;td&gt;"a local copy of files and folders being pulled every 5 minutes from some remote source"&lt;ul&gt;
                  &lt;li&gt;
                     &lt;code&gt;name&lt;/code&gt;:  "a unique name of the repo in user's account"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;deployment&lt;/code&gt;: Deployment&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;dockerFile&lt;/code&gt;:  "Docker file"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;manifest&lt;/code&gt;: Manifest&lt;/li&gt;
               &lt;/ul&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;
</markdown>
         <html>&lt;p&gt;The following table describes all technical details of Use Case &lt;code&gt;UC3&lt;/code&gt;:&lt;/p&gt;

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Property&lt;/th&gt;
            &lt;th&gt;Details&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;ID&lt;/td&gt;
            &lt;td&gt;UC3&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Signature&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;system&lt;/code&gt; deploys using &lt;code&gt;repo&lt;/code&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Primary&lt;/td&gt;
            &lt;td&gt;System&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Actors&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;system&lt;/code&gt; as System; &lt;code&gt;repo&lt;/code&gt; as Repository&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Success Flow&lt;/td&gt;
            &lt;td&gt;1. &lt;code&gt;system&lt;/code&gt; "starts a new Docker container with the latest version of the source code, configuring it as defined in Dockerfile"&lt;br/&gt;2. &lt;code&gt;system&lt;/code&gt; "applies the configuration defined in Manifest file to the container after it is started"&lt;br/&gt;3. &lt;code&gt;system&lt;/code&gt; "tracks the usage of CPU time and traffic by the container"&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;NFRs&lt;/td&gt;
            &lt;td&gt;PERF must  "each thindeck server should be able to host 4 actively working containers inside it, altogether handling 3M hits and 200 Gb of traffic per month, or 100K and 6.6 Gb per day"&lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;

&lt;p&gt;Actors taking participation in the Use Case have the following properties:&lt;/p&gt;

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Actor&lt;/th&gt;
            &lt;th&gt;Properties&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;System&lt;/td&gt;
            &lt;td&gt;"System under Development (thindeck itself)"&lt;br/&gt;"a web hosting that deploys itself"&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;System&lt;/td&gt;
            &lt;td&gt;"System under Development (thindeck itself)"&lt;br/&gt;"a web hosting that deploys itself"&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Repository&lt;/td&gt;
            &lt;td&gt;"a local copy of files and folders being pulled every 5 minutes from some remote source"&lt;ul&gt;
                  &lt;li&gt;
                     &lt;code&gt;name&lt;/code&gt;:  "a unique name of the repo in user's account"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;deployment&lt;/code&gt;: Deployment&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;dockerFile&lt;/code&gt;:  "Docker file"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;manifest&lt;/code&gt;: Manifest&lt;/li&gt;
               &lt;/ul&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;
</html>
      </method>
      <method seal="3c358d">
         <id>UC4</id>
         <attributes>
            <attribute seal="">specified</attribute>
            <attribute seal="">must</attribute>
         </attributes>
         <mentioned>
            <where>173</where>
            <where>174</where>
            <where>175</where>
         </mentioned>
         <bindings>
            <binding>
               <name>_self</name>
               <type>User</type>
            </binding>
            <binding>
               <name>repo</name>
               <type>Repository</type>
            </binding>
            <binding>
               <name>deployments</name>
               <type>Deployment</type>
            </binding>
         </bindings>
         <object>_self</object>
         <signature>reads deployment logs</signature>
         <args>
            <arg>repo</arg>
         </args>
         <steps>
            <step>
               <number>1</number>
               <mentioned>
                  <where>176</where>
               </mentioned>
               <object>system</object>
               <signature>lists</signature>
               <result>deployments</result>
            </step>
            <step>
               <number>2</number>
               <mentioned>
                  <where>177</where>
               </mentioned>
               <object>system</object>
               <signature>"displays a list of deployments that has already been executed"</signature>
            </step>
            <step>
               <number>3</number>
               <mentioned>
                  <where>178</where>
               </mentioned>
               <object>user</object>
               <signature>"chooses a deployment and initiates viewing its log"</signature>
            </step>
            <step>
               <number>4</number>
               <mentioned>
                  <where>179</where>
               </mentioned>
               <object>system</object>
               <signature>"displays a log for the chosen deployment"</signature>
            </step>
         </steps>
         <markdown>The following table describes all technical details of Use Case `UC4`:

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Property&lt;/th&gt;
            &lt;th&gt;Details&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;ID&lt;/td&gt;
            &lt;td&gt;UC4&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Signature&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;_self&lt;/code&gt; reads deployment logs using &lt;code&gt;repo&lt;/code&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Primary&lt;/td&gt;
            &lt;td&gt;User&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Actors&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;repo&lt;/code&gt; as Repository; &lt;code&gt;deployments&lt;/code&gt; as Deployment&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Success Flow&lt;/td&gt;
            &lt;td&gt;1. &lt;code&gt;system&lt;/code&gt; lists &lt;code&gt;deployments&lt;/code&gt;
               &lt;br/&gt;2. &lt;code&gt;system&lt;/code&gt; "displays a list of deployments that has already been executed"&lt;br/&gt;3. &lt;code&gt;user&lt;/code&gt; "chooses a deployment and initiates viewing its log"&lt;br/&gt;4. &lt;code&gt;system&lt;/code&gt; "displays a log for the chosen deployment"&lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;

Actors taking participation in the Use Case have the following properties:

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Actor&lt;/th&gt;
            &lt;th&gt;Properties&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;User&lt;/td&gt;
            &lt;td&gt;"a person who uses or wants to use hosting and is identified by the system (logged in)"&lt;ul&gt;
                  &lt;li&gt;
                     &lt;code&gt;repo&lt;/code&gt;: Repository&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;URN&lt;/code&gt;:  "a unique identifier of itself, for example urn:github:526301"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;authTokens&lt;/code&gt;:  "a list of auth tokens to each auth provider the user connected to, e.g., Google, Facebook, etc."&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;balance&lt;/code&gt;:  "amount of money available, can be stored as integer number of cents"&lt;/li&gt;
               &lt;/ul&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Repository&lt;/td&gt;
            &lt;td&gt;"a local copy of files and folders being pulled every 5 minutes from some remote source"&lt;ul&gt;
                  &lt;li&gt;
                     &lt;code&gt;name&lt;/code&gt;:  "a unique name of the repo in user's account"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;deployment&lt;/code&gt;: Deployment&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;dockerFile&lt;/code&gt;:  "Docker file"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;manifest&lt;/code&gt;: Manifest&lt;/li&gt;
               &lt;/ul&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Deployment&lt;/td&gt;
            &lt;td&gt;"a summary statistics of Containers related to a Repository, with their statuses and text logs"&lt;ul&gt;
                  &lt;li&gt;
                     &lt;code&gt;container&lt;/code&gt;: Container&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;state&lt;/code&gt;:  "one from the list: building, running"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;hourlyUsage&lt;/code&gt;: HourlyUsage&lt;/li&gt;
               &lt;/ul&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;
</markdown>
         <html>&lt;p&gt;The following table describes all technical details of Use Case &lt;code&gt;UC4&lt;/code&gt;:&lt;/p&gt;

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Property&lt;/th&gt;
            &lt;th&gt;Details&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;ID&lt;/td&gt;
            &lt;td&gt;UC4&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Signature&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;_self&lt;/code&gt; reads deployment logs using &lt;code&gt;repo&lt;/code&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Primary&lt;/td&gt;
            &lt;td&gt;User&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Actors&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;repo&lt;/code&gt; as Repository; &lt;code&gt;deployments&lt;/code&gt; as Deployment&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Success Flow&lt;/td&gt;
            &lt;td&gt;1. &lt;code&gt;system&lt;/code&gt; lists &lt;code&gt;deployments&lt;/code&gt;
               &lt;br/&gt;2. &lt;code&gt;system&lt;/code&gt; "displays a list of deployments that has already been executed"&lt;br/&gt;3. &lt;code&gt;user&lt;/code&gt; "chooses a deployment and initiates viewing its log"&lt;br/&gt;4. &lt;code&gt;system&lt;/code&gt; "displays a log for the chosen deployment"&lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;

&lt;p&gt;Actors taking participation in the Use Case have the following properties:&lt;/p&gt;

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Actor&lt;/th&gt;
            &lt;th&gt;Properties&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;User&lt;/td&gt;
            &lt;td&gt;"a person who uses or wants to use hosting and is identified by the system (logged in)"&lt;ul&gt;
                  &lt;li&gt;
                     &lt;code&gt;repo&lt;/code&gt;: Repository&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;URN&lt;/code&gt;:  "a unique identifier of itself, for example urn:github:526301"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;authTokens&lt;/code&gt;:  "a list of auth tokens to each auth provider the user connected to, e.g., Google, Facebook, etc."&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;balance&lt;/code&gt;:  "amount of money available, can be stored as integer number of cents"&lt;/li&gt;
               &lt;/ul&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Repository&lt;/td&gt;
            &lt;td&gt;"a local copy of files and folders being pulled every 5 minutes from some remote source"&lt;ul&gt;
                  &lt;li&gt;
                     &lt;code&gt;name&lt;/code&gt;:  "a unique name of the repo in user's account"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;deployment&lt;/code&gt;: Deployment&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;dockerFile&lt;/code&gt;:  "Docker file"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;manifest&lt;/code&gt;: Manifest&lt;/li&gt;
               &lt;/ul&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Deployment&lt;/td&gt;
            &lt;td&gt;"a summary statistics of Containers related to a Repository, with their statuses and text logs"&lt;ul&gt;
                  &lt;li&gt;
                     &lt;code&gt;container&lt;/code&gt;: Container&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;state&lt;/code&gt;:  "one from the list: building, running"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;hourlyUsage&lt;/code&gt;: HourlyUsage&lt;/li&gt;
               &lt;/ul&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;
</html>
      </method>
      <method seal="8fbe67">
         <id>UC5</id>
         <attributes>
            <attribute seal="">specified</attribute>
            <attribute seal="">must</attribute>
         </attributes>
         <mentioned>
            <where>181</where>
            <where>182</where>
            <where>183</where>
         </mentioned>
         <bindings>
            <binding>
               <name>_self</name>
               <type>User</type>
            </binding>
            <binding>
               <name>user</name>
               <type>User</type>
            </binding>
            <binding>
               <name>repo</name>
               <type>Repository</type>
            </binding>
         </bindings>
         <object>user</object>
         <signature>reads usage stats</signature>
         <args>
            <arg>repo</arg>
         </args>
         <steps>
            <step>
               <number>1</number>
               <mentioned>
                  <where>184</where>
               </mentioned>
               <object>user</object>
               <signature>"selects a time interval, like: last 7 days, last month, custom (from date, to date)"</signature>
            </step>
            <step>
               <number>2</number>
               <mentioned>
                  <where>185</where>
               </mentioned>
               <object>system</object>
               <signature>"reads HourlyUsage records corresponding to the repo within specified time interval"</signature>
            </step>
            <step>
               <number>3</number>
               <mentioned>
                  <where>186</where>
               </mentioned>
               <object>system</object>
               <signature>"shows the user a table with these columns: Container (id), Inbound traffic (Gb),
    Outbound traffic (Gb), CPU time (min), Cost ($). Each table row corresponds to a container.
    Last row contains totals by all containers. The values in the table are usage stats by container
    within specified time interval"</signature>
            </step>
         </steps>
         <markdown>The following table describes all technical details of Use Case `UC5`:

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Property&lt;/th&gt;
            &lt;th&gt;Details&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;ID&lt;/td&gt;
            &lt;td&gt;UC5&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Signature&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;user&lt;/code&gt; reads usage stats using &lt;code&gt;repo&lt;/code&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Primary&lt;/td&gt;
            &lt;td&gt;User&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Actors&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;user&lt;/code&gt; as User; &lt;code&gt;repo&lt;/code&gt; as Repository&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Success Flow&lt;/td&gt;
            &lt;td&gt;1. &lt;code&gt;user&lt;/code&gt; "selects a time interval, like: last 7 days, last month, custom (from date, to date)"&lt;br/&gt;2. &lt;code&gt;system&lt;/code&gt; "reads HourlyUsage records corresponding to the repo within specified time interval"&lt;br/&gt;3. &lt;code&gt;system&lt;/code&gt; "shows the user a table with these columns: Container (id), Inbound traffic (Gb),
    Outbound traffic (Gb), CPU time (min), Cost ($). Each table row corresponds to a container.
    Last row contains totals by all containers. The values in the table are usage stats by container
    within specified time interval"&lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;

Actors taking participation in the Use Case have the following properties:

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Actor&lt;/th&gt;
            &lt;th&gt;Properties&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;User&lt;/td&gt;
            &lt;td&gt;"a person who uses or wants to use hosting and is identified by the system (logged in)"&lt;ul&gt;
                  &lt;li&gt;
                     &lt;code&gt;repo&lt;/code&gt;: Repository&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;URN&lt;/code&gt;:  "a unique identifier of itself, for example urn:github:526301"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;authTokens&lt;/code&gt;:  "a list of auth tokens to each auth provider the user connected to, e.g., Google, Facebook, etc."&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;balance&lt;/code&gt;:  "amount of money available, can be stored as integer number of cents"&lt;/li&gt;
               &lt;/ul&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;User&lt;/td&gt;
            &lt;td&gt;"a person who uses or wants to use hosting and is identified by the system (logged in)"&lt;ul&gt;
                  &lt;li&gt;
                     &lt;code&gt;repo&lt;/code&gt;: Repository&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;URN&lt;/code&gt;:  "a unique identifier of itself, for example urn:github:526301"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;authTokens&lt;/code&gt;:  "a list of auth tokens to each auth provider the user connected to, e.g., Google, Facebook, etc."&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;balance&lt;/code&gt;:  "amount of money available, can be stored as integer number of cents"&lt;/li&gt;
               &lt;/ul&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Repository&lt;/td&gt;
            &lt;td&gt;"a local copy of files and folders being pulled every 5 minutes from some remote source"&lt;ul&gt;
                  &lt;li&gt;
                     &lt;code&gt;name&lt;/code&gt;:  "a unique name of the repo in user's account"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;deployment&lt;/code&gt;: Deployment&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;dockerFile&lt;/code&gt;:  "Docker file"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;manifest&lt;/code&gt;: Manifest&lt;/li&gt;
               &lt;/ul&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;
</markdown>
         <html>&lt;p&gt;The following table describes all technical details of Use Case &lt;code&gt;UC5&lt;/code&gt;:&lt;/p&gt;

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Property&lt;/th&gt;
            &lt;th&gt;Details&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;ID&lt;/td&gt;
            &lt;td&gt;UC5&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Signature&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;user&lt;/code&gt; reads usage stats using &lt;code&gt;repo&lt;/code&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Primary&lt;/td&gt;
            &lt;td&gt;User&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Actors&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;user&lt;/code&gt; as User; &lt;code&gt;repo&lt;/code&gt; as Repository&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Success Flow&lt;/td&gt;
            &lt;td&gt;1. &lt;code&gt;user&lt;/code&gt; "selects a time interval, like: last 7 days, last month, custom (from date, to date)"&lt;br/&gt;2. &lt;code&gt;system&lt;/code&gt; "reads HourlyUsage records corresponding to the repo within specified time interval"&lt;br/&gt;3. &lt;code&gt;system&lt;/code&gt; "shows the user a table with these columns: Container (id), Inbound traffic (Gb),
    Outbound traffic (Gb), CPU time (min), Cost ($). Each table row corresponds to a container.
    Last row contains totals by all containers. The values in the table are usage stats by container
    within specified time interval"&lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;

&lt;p&gt;Actors taking participation in the Use Case have the following properties:&lt;/p&gt;

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Actor&lt;/th&gt;
            &lt;th&gt;Properties&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;User&lt;/td&gt;
            &lt;td&gt;"a person who uses or wants to use hosting and is identified by the system (logged in)"&lt;ul&gt;
                  &lt;li&gt;
                     &lt;code&gt;repo&lt;/code&gt;: Repository&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;URN&lt;/code&gt;:  "a unique identifier of itself, for example urn:github:526301"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;authTokens&lt;/code&gt;:  "a list of auth tokens to each auth provider the user connected to, e.g., Google, Facebook, etc."&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;balance&lt;/code&gt;:  "amount of money available, can be stored as integer number of cents"&lt;/li&gt;
               &lt;/ul&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;User&lt;/td&gt;
            &lt;td&gt;"a person who uses or wants to use hosting and is identified by the system (logged in)"&lt;ul&gt;
                  &lt;li&gt;
                     &lt;code&gt;repo&lt;/code&gt;: Repository&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;URN&lt;/code&gt;:  "a unique identifier of itself, for example urn:github:526301"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;authTokens&lt;/code&gt;:  "a list of auth tokens to each auth provider the user connected to, e.g., Google, Facebook, etc."&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;balance&lt;/code&gt;:  "amount of money available, can be stored as integer number of cents"&lt;/li&gt;
               &lt;/ul&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Repository&lt;/td&gt;
            &lt;td&gt;"a local copy of files and folders being pulled every 5 minutes from some remote source"&lt;ul&gt;
                  &lt;li&gt;
                     &lt;code&gt;name&lt;/code&gt;:  "a unique name of the repo in user's account"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;deployment&lt;/code&gt;: Deployment&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;dockerFile&lt;/code&gt;:  "Docker file"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;manifest&lt;/code&gt;: Manifest&lt;/li&gt;
               &lt;/ul&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;
</html>
      </method>
      <method seal="d537a1">
         <id>UC6</id>
         <attributes>
            <attribute seal="">specified</attribute>
            <attribute seal="">must</attribute>
         </attributes>
         <mentioned>
            <where>191</where>
            <where>192</where>
            <where>193</where>
         </mentioned>
         <bindings>
            <binding>
               <name>_self</name>
               <type>User</type>
            </binding>
            <binding>
               <name>_arg0</name>
               <type>Repository</type>
            </binding>
         </bindings>
         <object>_self</object>
         <signature>compensates usage</signature>
         <args>
            <arg>_arg0</arg>
         </args>
         <info>
            <informal>The user adds funds to his account, when it goes to a negative value.
    Funds can be added through PayPal only</informal>
         </info>
         <markdown>The following table describes all technical details of Use Case `UC6`:

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Property&lt;/th&gt;
            &lt;th&gt;Details&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;ID&lt;/td&gt;
            &lt;td&gt;UC6&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Signature&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;_self&lt;/code&gt; compensates usage using &lt;code&gt;_arg0&lt;/code&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Primary&lt;/td&gt;
            &lt;td&gt;User&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Actors&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;_arg0&lt;/code&gt; as Repository&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Brief&lt;/td&gt;
            &lt;td&gt;"The user adds funds to his account, when it goes to a negative value. Funds can be added through PayPal only"&lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;

Actors taking participation in the Use Case have the following properties:

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Actor&lt;/th&gt;
            &lt;th&gt;Properties&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;User&lt;/td&gt;
            &lt;td&gt;"a person who uses or wants to use hosting and is identified by the system (logged in)"&lt;ul&gt;
                  &lt;li&gt;
                     &lt;code&gt;repo&lt;/code&gt;: Repository&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;URN&lt;/code&gt;:  "a unique identifier of itself, for example urn:github:526301"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;authTokens&lt;/code&gt;:  "a list of auth tokens to each auth provider the user connected to, e.g., Google, Facebook, etc."&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;balance&lt;/code&gt;:  "amount of money available, can be stored as integer number of cents"&lt;/li&gt;
               &lt;/ul&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Repository&lt;/td&gt;
            &lt;td&gt;"a local copy of files and folders being pulled every 5 minutes from some remote source"&lt;ul&gt;
                  &lt;li&gt;
                     &lt;code&gt;name&lt;/code&gt;:  "a unique name of the repo in user's account"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;deployment&lt;/code&gt;: Deployment&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;dockerFile&lt;/code&gt;:  "Docker file"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;manifest&lt;/code&gt;: Manifest&lt;/li&gt;
               &lt;/ul&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;
</markdown>
         <html>&lt;p&gt;The following table describes all technical details of Use Case &lt;code&gt;UC6&lt;/code&gt;:&lt;/p&gt;

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Property&lt;/th&gt;
            &lt;th&gt;Details&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;ID&lt;/td&gt;
            &lt;td&gt;UC6&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Signature&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;_self&lt;/code&gt; compensates usage using &lt;code&gt;_arg0&lt;/code&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Primary&lt;/td&gt;
            &lt;td&gt;User&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Actors&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;_arg0&lt;/code&gt; as Repository&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Brief&lt;/td&gt;
            &lt;td&gt;"The user adds funds to his account, when it goes to a negative value. Funds can be added through PayPal only"&lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;

&lt;p&gt;Actors taking participation in the Use Case have the following properties:&lt;/p&gt;

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Actor&lt;/th&gt;
            &lt;th&gt;Properties&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;User&lt;/td&gt;
            &lt;td&gt;"a person who uses or wants to use hosting and is identified by the system (logged in)"&lt;ul&gt;
                  &lt;li&gt;
                     &lt;code&gt;repo&lt;/code&gt;: Repository&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;URN&lt;/code&gt;:  "a unique identifier of itself, for example urn:github:526301"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;authTokens&lt;/code&gt;:  "a list of auth tokens to each auth provider the user connected to, e.g., Google, Facebook, etc."&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;balance&lt;/code&gt;:  "amount of money available, can be stored as integer number of cents"&lt;/li&gt;
               &lt;/ul&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Repository&lt;/td&gt;
            &lt;td&gt;"a local copy of files and folders being pulled every 5 minutes from some remote source"&lt;ul&gt;
                  &lt;li&gt;
                     &lt;code&gt;name&lt;/code&gt;:  "a unique name of the repo in user's account"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;deployment&lt;/code&gt;: Deployment&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;dockerFile&lt;/code&gt;:  "Docker file"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;manifest&lt;/code&gt;: Manifest&lt;/li&gt;
               &lt;/ul&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;
</html>
      </method>
      <method seal="842dd5">
         <id>UC7</id>
         <attributes>
            <attribute seal="">specified</attribute>
            <attribute seal="">must</attribute>
         </attributes>
         <mentioned>
            <where>197</where>
            <where>198</where>
            <where>199</where>
         </mentioned>
         <bindings>
            <binding>
               <name>_self</name>
               <type>User</type>
            </binding>
         </bindings>
         <object>_self</object>
         <signature>terminates</signature>
         <info>
            <informal>The user just removes the repository and we immediately terminate
    the Docker container, close all ports, and stop routing domain names.
    This operation is irreversible</informal>
         </info>
         <markdown>The following table describes all technical details of Use Case `UC7`:

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Property&lt;/th&gt;
            &lt;th&gt;Details&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;ID&lt;/td&gt;
            &lt;td&gt;UC7&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Signature&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;_self&lt;/code&gt; terminates&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Primary&lt;/td&gt;
            &lt;td&gt;User&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Actors&lt;/td&gt;
            &lt;td/&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Brief&lt;/td&gt;
            &lt;td&gt;"The user just removes the repository and we immediately terminate the Docker container, close all ports, and stop routing domain names. This operation is irreversible"&lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;

Actors taking participation in the Use Case have the following properties:

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Actor&lt;/th&gt;
            &lt;th&gt;Properties&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;User&lt;/td&gt;
            &lt;td&gt;"a person who uses or wants to use hosting and is identified by the system (logged in)"&lt;ul&gt;
                  &lt;li&gt;
                     &lt;code&gt;repo&lt;/code&gt;: Repository&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;URN&lt;/code&gt;:  "a unique identifier of itself, for example urn:github:526301"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;authTokens&lt;/code&gt;:  "a list of auth tokens to each auth provider the user connected to, e.g., Google, Facebook, etc."&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;balance&lt;/code&gt;:  "amount of money available, can be stored as integer number of cents"&lt;/li&gt;
               &lt;/ul&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;
</markdown>
         <html>&lt;p&gt;The following table describes all technical details of Use Case &lt;code&gt;UC7&lt;/code&gt;:&lt;/p&gt;

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Property&lt;/th&gt;
            &lt;th&gt;Details&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;ID&lt;/td&gt;
            &lt;td&gt;UC7&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Signature&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;_self&lt;/code&gt; terminates&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Primary&lt;/td&gt;
            &lt;td&gt;User&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Actors&lt;/td&gt;
            &lt;td/&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Brief&lt;/td&gt;
            &lt;td&gt;"The user just removes the repository and we immediately terminate the Docker container, close all ports, and stop routing domain names. This operation is irreversible"&lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;

&lt;p&gt;Actors taking participation in the Use Case have the following properties:&lt;/p&gt;

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Actor&lt;/th&gt;
            &lt;th&gt;Properties&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;User&lt;/td&gt;
            &lt;td&gt;"a person who uses or wants to use hosting and is identified by the system (logged in)"&lt;ul&gt;
                  &lt;li&gt;
                     &lt;code&gt;repo&lt;/code&gt;: Repository&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;URN&lt;/code&gt;:  "a unique identifier of itself, for example urn:github:526301"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;authTokens&lt;/code&gt;:  "a list of auth tokens to each auth provider the user connected to, e.g., Google, Facebook, etc."&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;balance&lt;/code&gt;:  "amount of money available, can be stored as integer number of cents"&lt;/li&gt;
               &lt;/ul&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;
</html>
      </method>
      <method seal="eadd3f">
         <id>UC10.1</id>
         <attributes>
            <attribute seal="">specified</attribute>
            <attribute seal="">must</attribute>
         </attributes>
         <mentioned>
            <where>210</where>
            <where>211</where>
            <where>212</where>
            <where>228</where>
            <where>230</where>
            <where>233</where>
            <where>235</where>
         </mentioned>
         <bindings>
            <binding>
               <name>_self</name>
               <type>WebVisitor</type>
            </binding>
            <binding>
               <name>visitor</name>
               <type>WebVisitor</type>
            </binding>
            <binding>
               <name>app</name>
               <type>Application</type>
            </binding>
            <binding>
               <name>request</name>
               <type>HttpRequest</type>
            </binding>
            <binding>
               <name>user</name>
               <type>User</type>
            </binding>
            <binding>
               <name>deployment</name>
               <type>Deployment</type>
            </binding>
            <binding>
               <name>container</name>
               <type>Container</type>
            </binding>
            <binding>
               <name>response</name>
               <type>HttpResponse</type>
            </binding>
            <binding>
               <name>record</name>
               <type>HourlyUsage</type>
            </binding>
         </bindings>
         <object>visitor</object>
         <signature>utilizes</signature>
         <result>app</result>
         <steps>
            <step>
               <number>1</number>
               <mentioned>
                  <where>213</where>
               </mentioned>
               <object>visitor</object>
               <signature>creates</signature>
               <result>request</result>
            </step>
            <step>
               <number>2</number>
               <mentioned>
                  <where>214</where>
               </mentioned>
               <object>system</object>
               <signature>reads</signature>
               <result>request</result>
               <exceptions>
                  <exception>
                     <when>the request is not valid, i.e., there is no active deployment whose Manifest would contain the binding to the requested host:port</when>
                     <steps>
                        <step>
                           <number>1</number>
                           <mentioned>
                              <where>228</where>
                           </mentioned>
                           <object>_self</object>
                           <signature>"http error 404: none of deployed applications is binded to the requested host:port"</signature>
                        </step>
                     </steps>
                  </exception>
               </exceptions>
            </step>
            <step>
               <number>3</number>
               <mentioned>
                  <where>215</where>
               </mentioned>
               <object>system</object>
               <signature>reads</signature>
               <result>user</result>
               <exceptions>
                  <exception>
                     <when>user.balance is below or equals to zero</when>
                     <steps>
                        <step>
                           <number>1</number>
                           <mentioned>
                              <where>230</where>
                           </mentioned>
                           <object>system</object>
                           <signature>notifies zero balance to</signature>
                           <result>user</result>
                        </step>
                        <step>
                           <number>2</number>
                           <mentioned>
                              <where>231</where>
                           </mentioned>
                           <object>_self</object>
                           <signature>"error page pointing out that user must top up his balance to utilize his application. The page should also contain a link to another page where the user can pay. If the user is Anonymous, he must log in first"</signature>
                        </step>
                     </steps>
                  </exception>
               </exceptions>
            </step>
            <step>
               <number>4</number>
               <mentioned>
                  <where>216</where>
               </mentioned>
               <object>system</object>
               <signature>notifies low balance to</signature>
               <result>user</result>
            </step>
            <step>
               <number>5</number>
               <mentioned>
                  <where>217</where>
               </mentioned>
               <object>system</object>
               <signature>reads</signature>
               <result>deployment</result>
            </step>
            <step>
               <number>6</number>
               <mentioned>
                  <where>218</where>
               </mentioned>
               <object>system</object>
               <signature>reads</signature>
               <result>container</result>
            </step>
            <step>
               <number>7</number>
               <mentioned>
                  <where>219</where>
               </mentioned>
               <object>system</object>
               <signature>"redirects the request to the app instance in a chosen container"</signature>
               <exceptions>
                  <exception>
                     <when>app is not listening to http port</when>
                     <steps>
                        <step>
                           <number>1</number>
                           <mentioned>
                              <where>233</where>
                           </mentioned>
                           <object>_self</object>
                           <signature>"http error 404: the app is not listening to the host:port"</signature>
                        </step>
                     </steps>
                  </exception>
               </exceptions>
            </step>
            <step>
               <number>8</number>
               <mentioned>
                  <where>220</where>
               </mentioned>
               <object>app</object>
               <signature>reads</signature>
               <result>request</result>
            </step>
            <step>
               <number>9</number>
               <mentioned>
                  <where>221</where>
               </mentioned>
               <object>app</object>
               <signature>"processes the request"</signature>
               <exceptions>
                  <exception>
                     <when>an exception appears during the app execution</when>
                     <steps>
                        <step>
                           <number>1</number>
                           <mentioned>
                              <where>235</where>
                           </mentioned>
                           <object>_self</object>
                           <signature>"http error 404 OR some standard page with exception stack trace"</signature>
                        </step>
                     </steps>
                  </exception>
               </exceptions>
            </step>
            <step>
               <number>10</number>
               <mentioned>
                  <where>222</where>
               </mentioned>
               <object>app</object>
               <signature>creates</signature>
               <result>response</result>
            </step>
            <step>
               <number>11</number>
               <mentioned>
                  <where>223</where>
               </mentioned>
               <object>app</object>
               <signature>"replies to the visitor with the response"</signature>
            </step>
            <step>
               <number>12</number>
               <mentioned>
                  <where>224</where>
               </mentioned>
               <object>visitor</object>
               <signature>reads</signature>
               <result>response</result>
            </step>
            <step>
               <number>13</number>
               <mentioned>
                  <where>225</where>
               </mentioned>
               <object>system</object>
               <signature>"tracks resources usage by the app"</signature>
            </step>
            <step>
               <number>14</number>
               <mentioned>
                  <where>226</where>
               </mentioned>
               <object>system</object>
               <signature>creates</signature>
               <result>record</result>
            </step>
         </steps>
         <markdown>The following table describes all technical details of Use Case `UC10.1`:

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Property&lt;/th&gt;
            &lt;th&gt;Details&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;ID&lt;/td&gt;
            &lt;td&gt;UC10.1&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Signature&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;visitor&lt;/code&gt; utilizes &lt;code&gt;app&lt;/code&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Primary&lt;/td&gt;
            &lt;td&gt;WebVisitor&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Actors&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;visitor&lt;/code&gt; as WebVisitor; &lt;code&gt;app&lt;/code&gt; as Application; &lt;code&gt;request&lt;/code&gt; as HttpRequest; &lt;code&gt;user&lt;/code&gt; as User; &lt;code&gt;deployment&lt;/code&gt; as Deployment; &lt;code&gt;container&lt;/code&gt; as Container; &lt;code&gt;response&lt;/code&gt; as HttpResponse; &lt;code&gt;record&lt;/code&gt; as HourlyUsage&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Success Flow&lt;/td&gt;
            &lt;td&gt;1. &lt;code&gt;visitor&lt;/code&gt; creates &lt;code&gt;request&lt;/code&gt;
               &lt;br/&gt;2. &lt;code&gt;system&lt;/code&gt; reads &lt;code&gt;request&lt;/code&gt;
               &lt;br/&gt;3. &lt;code&gt;system&lt;/code&gt; reads &lt;code&gt;user&lt;/code&gt;
               &lt;br/&gt;4. &lt;code&gt;system&lt;/code&gt; notifies low balance to &lt;code&gt;user&lt;/code&gt;
               &lt;br/&gt;5. &lt;code&gt;system&lt;/code&gt; reads &lt;code&gt;deployment&lt;/code&gt;
               &lt;br/&gt;6. &lt;code&gt;system&lt;/code&gt; reads &lt;code&gt;container&lt;/code&gt;
               &lt;br/&gt;7. &lt;code&gt;system&lt;/code&gt; "redirects the request to the app instance in a chosen container"&lt;br/&gt;8. &lt;code&gt;app&lt;/code&gt; reads &lt;code&gt;request&lt;/code&gt;
               &lt;br/&gt;9. &lt;code&gt;app&lt;/code&gt; "processes the request"&lt;br/&gt;10. &lt;code&gt;app&lt;/code&gt; creates &lt;code&gt;response&lt;/code&gt;
               &lt;br/&gt;11. &lt;code&gt;app&lt;/code&gt; "replies to the visitor with the response"&lt;br/&gt;12. &lt;code&gt;visitor&lt;/code&gt; reads &lt;code&gt;response&lt;/code&gt;
               &lt;br/&gt;13. &lt;code&gt;system&lt;/code&gt; "tracks resources usage by the app"&lt;br/&gt;14. &lt;code&gt;system&lt;/code&gt; creates &lt;code&gt;record&lt;/code&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;

Actors taking participation in the Use Case have the following properties:

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Actor&lt;/th&gt;
            &lt;th&gt;Properties&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;WebVisitor&lt;/td&gt;
            &lt;td&gt;"something sending http request to user's Application deployed in Thindeck"&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;WebVisitor&lt;/td&gt;
            &lt;td&gt;"something sending http request to user's Application deployed in Thindeck"&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Application&lt;/td&gt;
            &lt;td&gt;"a running instance of user's code built from his Repository"&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;HttpRequest&lt;/td&gt;
            &lt;td&gt;"a request that client application (web browser, web service consumer, etc.) sends to a web server via http protocol"&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;User&lt;/td&gt;
            &lt;td&gt;"a person who uses or wants to use hosting and is identified by the system (logged in)"&lt;ul&gt;
                  &lt;li&gt;
                     &lt;code&gt;repo&lt;/code&gt;: Repository&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;URN&lt;/code&gt;:  "a unique identifier of itself, for example urn:github:526301"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;authTokens&lt;/code&gt;:  "a list of auth tokens to each auth provider the user connected to, e.g., Google, Facebook, etc."&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;balance&lt;/code&gt;:  "amount of money available, can be stored as integer number of cents"&lt;/li&gt;
               &lt;/ul&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Deployment&lt;/td&gt;
            &lt;td&gt;"a summary statistics of Containers related to a Repository, with their statuses and text logs"&lt;ul&gt;
                  &lt;li&gt;
                     &lt;code&gt;container&lt;/code&gt;: Container&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;state&lt;/code&gt;:  "one from the list: building, running"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;hourlyUsage&lt;/code&gt;: HourlyUsage&lt;/li&gt;
               &lt;/ul&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Container&lt;/td&gt;
            &lt;td&gt;"a virtual operating system running user's application build from Repository"&lt;ul&gt;
                  &lt;li&gt;
                     &lt;code&gt;app&lt;/code&gt;: Application&lt;/li&gt;
               &lt;/ul&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;HttpResponse&lt;/td&gt;
            &lt;td&gt;"a response that a web server sends back after it receives HttpRequest"&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;HourlyUsage&lt;/td&gt;
            &lt;td&gt;"an atomic track record of the usage of resources"&lt;ul&gt;
                  &lt;li&gt;
                     &lt;code&gt;container&lt;/code&gt;: Container&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;hours&lt;/code&gt;:  "a calendar hour, for example: 2014-05-02T18"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;cpuSeconds&lt;/code&gt;:  "how many seconds our CPU spent working with the container during this hour. Can easily be over 3600, since we may have multiple CPU's working with the container"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;bytesIn&lt;/code&gt;:  "an integer number of bytes came in the container"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;bytesOut&lt;/code&gt;:  "an integer number of bytes came out of the container"&lt;/li&gt;
               &lt;/ul&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;
</markdown>
         <html>&lt;p&gt;The following table describes all technical details of Use Case &lt;code&gt;UC10.1&lt;/code&gt;:&lt;/p&gt;

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Property&lt;/th&gt;
            &lt;th&gt;Details&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;ID&lt;/td&gt;
            &lt;td&gt;UC10.1&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Signature&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;visitor&lt;/code&gt; utilizes &lt;code&gt;app&lt;/code&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Primary&lt;/td&gt;
            &lt;td&gt;WebVisitor&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Actors&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;visitor&lt;/code&gt; as WebVisitor; &lt;code&gt;app&lt;/code&gt; as Application; &lt;code&gt;request&lt;/code&gt; as HttpRequest; &lt;code&gt;user&lt;/code&gt; as User; &lt;code&gt;deployment&lt;/code&gt; as Deployment; &lt;code&gt;container&lt;/code&gt; as Container; &lt;code&gt;response&lt;/code&gt; as HttpResponse; &lt;code&gt;record&lt;/code&gt; as HourlyUsage&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Success Flow&lt;/td&gt;
            &lt;td&gt;1. &lt;code&gt;visitor&lt;/code&gt; creates &lt;code&gt;request&lt;/code&gt;
               &lt;br/&gt;2. &lt;code&gt;system&lt;/code&gt; reads &lt;code&gt;request&lt;/code&gt;
               &lt;br/&gt;3. &lt;code&gt;system&lt;/code&gt; reads &lt;code&gt;user&lt;/code&gt;
               &lt;br/&gt;4. &lt;code&gt;system&lt;/code&gt; notifies low balance to &lt;code&gt;user&lt;/code&gt;
               &lt;br/&gt;5. &lt;code&gt;system&lt;/code&gt; reads &lt;code&gt;deployment&lt;/code&gt;
               &lt;br/&gt;6. &lt;code&gt;system&lt;/code&gt; reads &lt;code&gt;container&lt;/code&gt;
               &lt;br/&gt;7. &lt;code&gt;system&lt;/code&gt; "redirects the request to the app instance in a chosen container"&lt;br/&gt;8. &lt;code&gt;app&lt;/code&gt; reads &lt;code&gt;request&lt;/code&gt;
               &lt;br/&gt;9. &lt;code&gt;app&lt;/code&gt; "processes the request"&lt;br/&gt;10. &lt;code&gt;app&lt;/code&gt; creates &lt;code&gt;response&lt;/code&gt;
               &lt;br/&gt;11. &lt;code&gt;app&lt;/code&gt; "replies to the visitor with the response"&lt;br/&gt;12. &lt;code&gt;visitor&lt;/code&gt; reads &lt;code&gt;response&lt;/code&gt;
               &lt;br/&gt;13. &lt;code&gt;system&lt;/code&gt; "tracks resources usage by the app"&lt;br/&gt;14. &lt;code&gt;system&lt;/code&gt; creates &lt;code&gt;record&lt;/code&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;

&lt;p&gt;Actors taking participation in the Use Case have the following properties:&lt;/p&gt;

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Actor&lt;/th&gt;
            &lt;th&gt;Properties&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;WebVisitor&lt;/td&gt;
            &lt;td&gt;"something sending http request to user's Application deployed in Thindeck"&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;WebVisitor&lt;/td&gt;
            &lt;td&gt;"something sending http request to user's Application deployed in Thindeck"&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Application&lt;/td&gt;
            &lt;td&gt;"a running instance of user's code built from his Repository"&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;HttpRequest&lt;/td&gt;
            &lt;td&gt;"a request that client application (web browser, web service consumer, etc.) sends to a web server via http protocol"&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;User&lt;/td&gt;
            &lt;td&gt;"a person who uses or wants to use hosting and is identified by the system (logged in)"&lt;ul&gt;
                  &lt;li&gt;
                     &lt;code&gt;repo&lt;/code&gt;: Repository&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;URN&lt;/code&gt;:  "a unique identifier of itself, for example urn:github:526301"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;authTokens&lt;/code&gt;:  "a list of auth tokens to each auth provider the user connected to, e.g., Google, Facebook, etc."&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;balance&lt;/code&gt;:  "amount of money available, can be stored as integer number of cents"&lt;/li&gt;
               &lt;/ul&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Deployment&lt;/td&gt;
            &lt;td&gt;"a summary statistics of Containers related to a Repository, with their statuses and text logs"&lt;ul&gt;
                  &lt;li&gt;
                     &lt;code&gt;container&lt;/code&gt;: Container&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;state&lt;/code&gt;:  "one from the list: building, running"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;hourlyUsage&lt;/code&gt;: HourlyUsage&lt;/li&gt;
               &lt;/ul&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Container&lt;/td&gt;
            &lt;td&gt;"a virtual operating system running user's application build from Repository"&lt;ul&gt;
                  &lt;li&gt;
                     &lt;code&gt;app&lt;/code&gt;: Application&lt;/li&gt;
               &lt;/ul&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;HttpResponse&lt;/td&gt;
            &lt;td&gt;"a response that a web server sends back after it receives HttpRequest"&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;HourlyUsage&lt;/td&gt;
            &lt;td&gt;"an atomic track record of the usage of resources"&lt;ul&gt;
                  &lt;li&gt;
                     &lt;code&gt;container&lt;/code&gt;: Container&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;hours&lt;/code&gt;:  "a calendar hour, for example: 2014-05-02T18"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;cpuSeconds&lt;/code&gt;:  "how many seconds our CPU spent working with the container during this hour. Can easily be over 3600, since we may have multiple CPU's working with the container"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;bytesIn&lt;/code&gt;:  "an integer number of bytes came in the container"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;bytesOut&lt;/code&gt;:  "an integer number of bytes came out of the container"&lt;/li&gt;
               &lt;/ul&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;
</html>
      </method>
      <method seal="5feacc">
         <id>UC6.2</id>
         <mentioned>
            <where>237</where>
         </mentioned>
         <bindings>
            <binding>
               <name>_self</name>
               <type>System</type>
            </binding>
            <binding>
               <name>system</name>
               <type>System</type>
            </binding>
            <binding>
               <name>user</name>
               <type>User</type>
            </binding>
         </bindings>
         <object>system</object>
         <signature>notifies low balance to</signature>
         <result>user</result>
         <info>
            <informal>The system sends the user an email notification one time when his balance is dropped below $5. We can also implement UI notifications</informal>
         </info>
         <markdown>The following table describes all technical details of Use Case `UC6.2`:

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Property&lt;/th&gt;
            &lt;th&gt;Details&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;ID&lt;/td&gt;
            &lt;td&gt;UC6.2&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Signature&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;system&lt;/code&gt; notifies low balance to &lt;code&gt;user&lt;/code&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Primary&lt;/td&gt;
            &lt;td&gt;System&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Actors&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;system&lt;/code&gt; as System; &lt;code&gt;user&lt;/code&gt; as User&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Brief&lt;/td&gt;
            &lt;td&gt;"The system sends the user an email notification one time when his balance is dropped below $5. We can also implement UI notifications"&lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;

Actors taking participation in the Use Case have the following properties:

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Actor&lt;/th&gt;
            &lt;th&gt;Properties&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;System&lt;/td&gt;
            &lt;td&gt;"System under Development (thindeck itself)"&lt;br/&gt;"a web hosting that deploys itself"&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;System&lt;/td&gt;
            &lt;td&gt;"System under Development (thindeck itself)"&lt;br/&gt;"a web hosting that deploys itself"&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;User&lt;/td&gt;
            &lt;td&gt;"a person who uses or wants to use hosting and is identified by the system (logged in)"&lt;ul&gt;
                  &lt;li&gt;
                     &lt;code&gt;repo&lt;/code&gt;: Repository&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;URN&lt;/code&gt;:  "a unique identifier of itself, for example urn:github:526301"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;authTokens&lt;/code&gt;:  "a list of auth tokens to each auth provider the user connected to, e.g., Google, Facebook, etc."&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;balance&lt;/code&gt;:  "amount of money available, can be stored as integer number of cents"&lt;/li&gt;
               &lt;/ul&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;
</markdown>
         <html>&lt;p&gt;The following table describes all technical details of Use Case &lt;code&gt;UC6.2&lt;/code&gt;:&lt;/p&gt;

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Property&lt;/th&gt;
            &lt;th&gt;Details&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;ID&lt;/td&gt;
            &lt;td&gt;UC6.2&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Signature&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;system&lt;/code&gt; notifies low balance to &lt;code&gt;user&lt;/code&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Primary&lt;/td&gt;
            &lt;td&gt;System&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Actors&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;system&lt;/code&gt; as System; &lt;code&gt;user&lt;/code&gt; as User&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Brief&lt;/td&gt;
            &lt;td&gt;"The system sends the user an email notification one time when his balance is dropped below $5. We can also implement UI notifications"&lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;

&lt;p&gt;Actors taking participation in the Use Case have the following properties:&lt;/p&gt;

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Actor&lt;/th&gt;
            &lt;th&gt;Properties&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;System&lt;/td&gt;
            &lt;td&gt;"System under Development (thindeck itself)"&lt;br/&gt;"a web hosting that deploys itself"&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;System&lt;/td&gt;
            &lt;td&gt;"System under Development (thindeck itself)"&lt;br/&gt;"a web hosting that deploys itself"&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;User&lt;/td&gt;
            &lt;td&gt;"a person who uses or wants to use hosting and is identified by the system (logged in)"&lt;ul&gt;
                  &lt;li&gt;
                     &lt;code&gt;repo&lt;/code&gt;: Repository&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;URN&lt;/code&gt;:  "a unique identifier of itself, for example urn:github:526301"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;authTokens&lt;/code&gt;:  "a list of auth tokens to each auth provider the user connected to, e.g., Google, Facebook, etc."&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;balance&lt;/code&gt;:  "amount of money available, can be stored as integer number of cents"&lt;/li&gt;
               &lt;/ul&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;
</html>
      </method>
      <method seal="07789e">
         <id>UC6.3</id>
         <mentioned>
            <where>240</where>
         </mentioned>
         <bindings>
            <binding>
               <name>_self</name>
               <type>System</type>
            </binding>
            <binding>
               <name>system</name>
               <type>System</type>
            </binding>
            <binding>
               <name>user</name>
               <type>User</type>
            </binding>
         </bindings>
         <object>system</object>
         <signature>notifies zero balance to</signature>
         <result>user</result>
         <info>
            <informal>The system sends the user an email notification one time when his balance is dropped below $0. We can also implement UI notifications</informal>
         </info>
         <markdown>The following table describes all technical details of Use Case `UC6.3`:

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Property&lt;/th&gt;
            &lt;th&gt;Details&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;ID&lt;/td&gt;
            &lt;td&gt;UC6.3&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Signature&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;system&lt;/code&gt; notifies zero balance to &lt;code&gt;user&lt;/code&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Primary&lt;/td&gt;
            &lt;td&gt;System&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Actors&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;system&lt;/code&gt; as System; &lt;code&gt;user&lt;/code&gt; as User&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Brief&lt;/td&gt;
            &lt;td&gt;"The system sends the user an email notification one time when his balance is dropped below $0. We can also implement UI notifications"&lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;

Actors taking participation in the Use Case have the following properties:

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Actor&lt;/th&gt;
            &lt;th&gt;Properties&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;System&lt;/td&gt;
            &lt;td&gt;"System under Development (thindeck itself)"&lt;br/&gt;"a web hosting that deploys itself"&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;System&lt;/td&gt;
            &lt;td&gt;"System under Development (thindeck itself)"&lt;br/&gt;"a web hosting that deploys itself"&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;User&lt;/td&gt;
            &lt;td&gt;"a person who uses or wants to use hosting and is identified by the system (logged in)"&lt;ul&gt;
                  &lt;li&gt;
                     &lt;code&gt;repo&lt;/code&gt;: Repository&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;URN&lt;/code&gt;:  "a unique identifier of itself, for example urn:github:526301"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;authTokens&lt;/code&gt;:  "a list of auth tokens to each auth provider the user connected to, e.g., Google, Facebook, etc."&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;balance&lt;/code&gt;:  "amount of money available, can be stored as integer number of cents"&lt;/li&gt;
               &lt;/ul&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;
</markdown>
         <html>&lt;p&gt;The following table describes all technical details of Use Case &lt;code&gt;UC6.3&lt;/code&gt;:&lt;/p&gt;

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Property&lt;/th&gt;
            &lt;th&gt;Details&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;ID&lt;/td&gt;
            &lt;td&gt;UC6.3&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Signature&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;system&lt;/code&gt; notifies zero balance to &lt;code&gt;user&lt;/code&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Primary&lt;/td&gt;
            &lt;td&gt;System&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Actors&lt;/td&gt;
            &lt;td&gt;
               &lt;code&gt;system&lt;/code&gt; as System; &lt;code&gt;user&lt;/code&gt; as User&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;Brief&lt;/td&gt;
            &lt;td&gt;"The system sends the user an email notification one time when his balance is dropped below $0. We can also implement UI notifications"&lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;

&lt;p&gt;Actors taking participation in the Use Case have the following properties:&lt;/p&gt;

&lt;table&gt;
      &lt;thead&gt;
         &lt;tr&gt;
            &lt;th&gt;Actor&lt;/th&gt;
            &lt;th&gt;Properties&lt;/th&gt;
         &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
         &lt;tr&gt;
            &lt;td&gt;System&lt;/td&gt;
            &lt;td&gt;"System under Development (thindeck itself)"&lt;br/&gt;"a web hosting that deploys itself"&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;System&lt;/td&gt;
            &lt;td&gt;"System under Development (thindeck itself)"&lt;br/&gt;"a web hosting that deploys itself"&lt;/td&gt;
         &lt;/tr&gt;
         &lt;tr&gt;
            &lt;td&gt;User&lt;/td&gt;
            &lt;td&gt;"a person who uses or wants to use hosting and is identified by the system (logged in)"&lt;ul&gt;
                  &lt;li&gt;
                     &lt;code&gt;repo&lt;/code&gt;: Repository&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;URN&lt;/code&gt;:  "a unique identifier of itself, for example urn:github:526301"&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;authTokens&lt;/code&gt;:  "a list of auth tokens to each auth provider the user connected to, e.g., Google, Facebook, etc."&lt;/li&gt;
                  &lt;li&gt;
                     &lt;code&gt;balance&lt;/code&gt;:  "amount of money available, can be stored as integer number of cents"&lt;/li&gt;
               &lt;/ul&gt;
            &lt;/td&gt;
         &lt;/tr&gt;
      &lt;/tbody&gt;
   &lt;/table&gt;
</html>
      </method>
   </methods>
   <pages>
      <page>
         <title>Vision</title>
         <info>
            <informal>

Requirements providers are:

 * Yegor Bugayenko

Key success factors are:

 * High availability - much higher than anyone else can offer.
 * Low cost - lower than anyone.
 * Easy (re)deployment - a unique 'pull' deployment mechanism.
 * Simple control panel - one form and your site is ready in 5 minutes.".

</informal>
         </info>
         <mentioned>
            <where>256</where>
         </mentioned>
         <html xmlns:r="org.requs.facet.XsltFuncs">&lt;p&gt;Requirements providers are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Yegor Bugayenko&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Key success factors are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;High availability - much higher than anyone else can offer.&lt;/li&gt;
&lt;li&gt;Low cost - lower than anyone.&lt;/li&gt;
&lt;li&gt;Easy (re)deployment - a unique 'pull' deployment mechanism.&lt;/li&gt;
&lt;li&gt;Simple control panel - one form and your site is ready in 5 minutes.".&lt;/li&gt;
&lt;/ul&gt;
</html>
      </page>
   </pages>
   <errors/>
   <metrics>
      <metric id="overall">0.6875</metric>
   </metrics>
   <tbds>
      <tbd id="TBD-d4161">
         <subject>UC6</subject>
         <description>Method UC6 has an informal description that increases its ambiguity and has to be eliminated</description>
      </tbd>
      <tbd id="TBD-247ba">
         <subject>UC7</subject>
         <description>Method UC7 has an informal description that increases its ambiguity and has to be eliminated</description>
      </tbd>
      <tbd id="TBD-49fea">
         <subject>UC6.2</subject>
         <description>Method UC6.2 has an informal description that increases its ambiguity and has to be eliminated</description>
      </tbd>
      <tbd id="TBD-c69d5">
         <subject>UC6.3</subject>
         <description>Method UC6.3 has an informal description that increases its ambiguity and has to be eliminated</description>
      </tbd>
      <tbd id="TBD-c8698">
         <subject>UC8</subject>
         <description>Step #1 in method UC8 has an informal signature "downloads the Thindeck app (either as a TGZ archive of RPM package or as a Chef cookbook)" that increases the ambiguity of the entire method and has to be eliminated</description>
      </tbd>
      <tbd id="TBD-b8765">
         <subject>UC8</subject>
         <description>Step #2 in method UC8 has an informal signature "installs the app locally on his machine" that increases the ambiguity of the entire method and has to be eliminated</description>
      </tbd>
      <tbd id="TBD-664b6">
         <subject>UC8</subject>
         <description>Step #3 in method UC8 has an informal signature "starts the system as a Java standalone app, or a Linux service, or something similar" that increases the ambiguity of the entire method and has to be eliminated</description>
      </tbd>
      <tbd id="TBD-72bb9">
         <subject>UC8</subject>
         <description>Step #5 in method UC8 has an informal signature "is now running as a standalone app on hoster's machine. It uses its local database and local Docker installation. That means that no object in the system will depend on any other Thindeck installation, including our own which we provide as a service. This applies to user profiles, repositories, Docker containers, etc." that increases the ambiguity of the entire method and has to be eliminated</description>
      </tbd>
      <tbd id="TBD-c6056">
         <subject>UC9.1</subject>
         <description>Step #2 in method UC9.1 has an informal signature "reads the stats page containing our runtime stats, similar to https://status.github.com/" that increases the ambiguity of the entire method and has to be eliminated</description>
      </tbd>
      <tbd id="TBD-d2b51">
         <subject>UC9.1</subject>
         <description>Step #3 in method UC9.1 has an informal signature "reads our terms page including all the legal wordings" that increases the ambiguity of the entire method and has to be eliminated</description>
      </tbd>
      <tbd id="TBD-b545a">
         <subject>UC9.2</subject>
         <description>Step #1 in method UC9.2 has an informal signature "initiates sign in via one of OAuth providers from this list: Google Plus, Facebook, Github, or Twitter." that increases the ambiguity of the entire method and has to be eliminated</description>
      </tbd>
      <tbd id="TBD-d440a">
         <subject>UC9.2</subject>
         <description>Step #2 in method UC9.2 has an informal signature "requests permission from the OAuth provider chosen by the anonymous" that increases the ambiguity of the entire method and has to be eliminated</description>
      </tbd>
      <tbd id="TBD-7a8eb">
         <subject>UC9.2</subject>
         <description>Step #4 in method UC9.2 has an informal signature "adds $5 to the user.balance" that increases the ambiguity of the entire method and has to be eliminated</description>
      </tbd>
      <tbd id="TBD-d136d">
         <subject>UC9.3</subject>
         <description>Step #1 in method UC9.3 has an informal signature "from now on treats the anonymous as a User" that increases the ambiguity of the entire method and has to be eliminated</description>
      </tbd>
      <tbd id="TBD-d645f">
         <subject>UC11</subject>
         <description>Step #1 in method UC11 has an informal signature "from now on treats the user as anonymous and displays a public page" that increases the ambiguity of the entire method and has to be eliminated</description>
      </tbd>
      <tbd id="TBD-59ec4">
         <subject>UC2</subject>
         <description>Step #1 in method UC2 has an informal signature "enters a new unique name of the repository, provides the data required for authorization,
    depending on the type of chosen repository, and confirms entered data" that increases the ambiguity of the entire method and has to be eliminated</description>
      </tbd>
      <tbd id="TBD-ede7e">
         <subject>UC2</subject>
         <description>Step #3 in method UC2 has an informal signature "displays a repo in the list of other repositories in the user account" that increases the ambiguity of the entire method and has to be eliminated</description>
      </tbd>
      <tbd id="TBD-86845">
         <subject>UC3</subject>
         <description>Step #1 in method UC3 has an informal signature "starts a new Docker container with the latest version of the source code, configuring it as defined in Dockerfile" that increases the ambiguity of the entire method and has to be eliminated</description>
      </tbd>
      <tbd id="TBD-af751">
         <subject>UC3</subject>
         <description>Step #2 in method UC3 has an informal signature "applies the configuration defined in Manifest file to the container after it is started" that increases the ambiguity of the entire method and has to be eliminated</description>
      </tbd>
      <tbd id="TBD-038da">
         <subject>UC3</subject>
         <description>Step #3 in method UC3 has an informal signature "tracks the usage of CPU time and traffic by the container" that increases the ambiguity of the entire method and has to be eliminated</description>
      </tbd>
      <tbd id="TBD-ed5ff">
         <subject>UC4</subject>
         <description>Step #2 in method UC4 has an informal signature "displays a list of deployments that has already been executed" that increases the ambiguity of the entire method and has to be eliminated</description>
      </tbd>
      <tbd id="TBD-6c329">
         <subject>UC4</subject>
         <description>Step #3 in method UC4 has an informal signature "chooses a deployment and initiates viewing its log" that increases the ambiguity of the entire method and has to be eliminated</description>
      </tbd>
      <tbd id="TBD-d7f59">
         <subject>UC4</subject>
         <description>Step #4 in method UC4 has an informal signature "displays a log for the chosen deployment" that increases the ambiguity of the entire method and has to be eliminated</description>
      </tbd>
      <tbd id="TBD-d39d2">
         <subject>UC5</subject>
         <description>Step #1 in method UC5 has an informal signature "selects a time interval, like: last 7 days, last month, custom (from date, to date)" that increases the ambiguity of the entire method and has to be eliminated</description>
      </tbd>
      <tbd id="TBD-a9df6">
         <subject>UC5</subject>
         <description>Step #2 in method UC5 has an informal signature "reads HourlyUsage records corresponding to the repo within specified time interval" that increases the ambiguity of the entire method and has to be eliminated</description>
      </tbd>
      <tbd id="TBD-c039f">
         <subject>UC5</subject>
         <description>Step #3 in method UC5 has an informal signature "shows the user a table with these columns: Container (id), Inbound traffic (Gb),
    Outbound traffic (Gb), CPU time (min), Cost ($). Each table row corresponds to a container.
    Last row contains totals by all containers. The values in the table are usage stats by container
    within specified time interval" that increases the ambiguity of the entire method and has to be eliminated</description>
      </tbd>
      <tbd id="TBD-74444">
         <subject>UC10.1</subject>
         <description>Step #7 in method UC10.1 has an informal signature "redirects the request to the app instance in a chosen container" that increases the ambiguity of the entire method and has to be eliminated</description>
      </tbd>
      <tbd id="TBD-1bcf5">
         <subject>UC10.1</subject>
         <description>Step #9 in method UC10.1 has an informal signature "processes the request" that increases the ambiguity of the entire method and has to be eliminated</description>
      </tbd>
      <tbd id="TBD-a9c69">
         <subject>UC10.1</subject>
         <description>Step #11 in method UC10.1 has an informal signature "replies to the visitor with the response" that increases the ambiguity of the entire method and has to be eliminated</description>
      </tbd>
      <tbd id="TBD-a0cda">
         <subject>UC10.1</subject>
         <description>Step #13 in method UC10.1 has an informal signature "tracks resources usage by the app" that increases the ambiguity of the entire method and has to be eliminated</description>
      </tbd>
   </tbds>
   <requs>
      <version>1.10.1</version>
      <revision>ec2eaf0</revision>
      <date>2014-05-25 22:34</date>
   </requs>
</spec>